{"ast":null,"code":"import React,{useState,useContext,useEffect}from'react';import{useForm}from'react-hook-form';import{PostsContext}from'../providers/posts-providers';import{AuthContext}from'../providers/auth-provider';import'../styles/AdminControlPanel.css';// This func will display a form to edit exiting post\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export function EditPostForm(_ref){let{postId}=_ref;// Get the necessary posts funcs from the posts provider\nconst{updatePost,getPostById,fetchPosts}=useContext(PostsContext);// Get the necessary form funcs of the form hook\nconst{register,handleSubmit,formState,setValue,reset}=useForm({defaultValues:{title:'',description:'',imageUrl:''}});const[formattedDate,setFormattedDate]=useState('');const[successMessage,setSuccessMessage]=useState('');useEffect(()=>{// Fetch posts when the component mounts\nfetchPosts();},[]);// Empty dependency array to fetch data only once when the component mounts\nconst currentPost=getPostById(Number(postId));useEffect(()=>{// Update default values when currentPost changes\nif(currentPost){reset({title:currentPost.title,description:currentPost.description,imageUrl:currentPost.imageUrl});// Set the category value dynamically\nsetValue('category',currentPost.category);}},[currentPost,reset,setValue]);useEffect(()=>{// Format the date when posts or postId change\nif(currentPost){const currentDate=new Date();const options={month:'short',day:'numeric',year:'numeric'};const formattedDate=new Date(currentDate).toLocaleString('en-US',options);setFormattedDate(formattedDate);}},[postId,getPostById]);const handleEditPostSubmit=data=>{// func for taking care when admin clicks \"update post\"\nconst{title,description,imageFile,category}=data;// If the admin chose a new photo, use the new imageFile, otherwise, keep the original imageUrl\nconst imageUrl=imageFile&&imageFile[0]?URL.createObjectURL(imageFile[0]):currentPost.imageUrl;// set date by the figma format\nconst currentDate=new Date();const options={month:'short',day:'numeric',year:'numeric'};const formattedDate=new Date(currentDate).toLocaleString('en-US',options);setFormattedDate(formattedDate);// keep the original post values for making the editing easier for admin\nconst postData={id:postId,category:category,title:title,description:description,imageUrl:imageUrl,date:formattedDate};updatePost(postData);setSuccessMessage('Post updated successfully!');reset();};if(!currentPost){return/*#__PURE__*/_jsx(\"p\",{children:\"Post isn't exist.\"});}// Creating a new post for edit\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"admin-form\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Edit The Post\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(handleEditPostSubmit),children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Current Date: \",formattedDate]}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"category\",children:\"Category\"}),/*#__PURE__*/_jsxs(\"select\",{...register('category'),children:[/*#__PURE__*/_jsx(\"option\",{value:\"Daily_Digest\",children:\"Daily Digest\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Design_Tools\",children:\"Design Tools\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Tutorials\",children:\"Tutorials\"})]}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"title\",children:\"Title\"}),/*#__PURE__*/_jsx(\"input\",{...register('title')}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"description\",children:\"Description\"}),/*#__PURE__*/_jsx(\"textarea\",{...register('description')}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"imageUrl\",children:\"Current Image URL:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:currentPost===null||currentPost===void 0?void 0:currentPost.imageUrl,readOnly:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"imageFile\",children:\"Choose Image:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\"image/*\",...register('imageFile')}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Update Post\"})]}),successMessage&&/*#__PURE__*/_jsx(\"p\",{className:\"success-message\",children:successMessage})]});}export default function EditPost(_ref2){let{postId}=_ref2;const{user}=useContext(AuthContext);// Convert postId to an integer\nconst postIdInt=parseInt(postId,10);if(!user){return/*#__PURE__*/_jsx(\"p\",{children:\"You must sign in first!\"});}return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(EditPostForm,{postId:postIdInt})});}","map":{"version":3,"names":["React","useState","useContext","useEffect","useForm","PostsContext","AuthContext","jsx","_jsx","jsxs","_jsxs","EditPostForm","_ref","postId","updatePost","getPostById","fetchPosts","register","handleSubmit","formState","setValue","reset","defaultValues","title","description","imageUrl","formattedDate","setFormattedDate","successMessage","setSuccessMessage","currentPost","Number","category","currentDate","Date","options","month","day","year","toLocaleString","handleEditPostSubmit","data","imageFile","URL","createObjectURL","postData","id","date","children","className","onSubmit","htmlFor","value","type","readOnly","accept","EditPost","_ref2","user","postIdInt","parseInt"],"sources":["C:/Users/Tal/Documents/Programming courses/WebDev/BackEnd/Blog_Final_Project/BlogFrontEnd/src/components/EditPost.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { PostsContext } from '../providers/posts-providers';\r\nimport { AuthContext } from '../providers/auth-provider';\r\nimport '../styles/AdminControlPanel.css';\r\n\r\n// This func will display a form to edit exiting post\r\nexport function EditPostForm({ postId }) {\r\n    // Get the necessary posts funcs from the posts provider\r\n    const { updatePost, getPostById, fetchPosts } = useContext(PostsContext);\r\n\r\n    // Get the necessary form funcs of the form hook\r\n    const { register, handleSubmit, formState, setValue, reset } = useForm({\r\n        defaultValues: {\r\n            title: '',\r\n            description: '',\r\n            imageUrl: '',\r\n        },\r\n    });\r\n\r\n    const [formattedDate, setFormattedDate] = useState('');\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Fetch posts when the component mounts\r\n        fetchPosts();\r\n    }, []); // Empty dependency array to fetch data only once when the component mounts\r\n\r\n    const currentPost = getPostById(Number(postId));\r\n\r\n    useEffect(() => {\r\n        // Update default values when currentPost changes\r\n        if (currentPost) {\r\n            reset({\r\n                title: currentPost.title,\r\n                description: currentPost.description,\r\n                imageUrl: currentPost.imageUrl,\r\n            });\r\n\r\n            // Set the category value dynamically\r\n            setValue('category', currentPost.category);\r\n        }\r\n    }, [currentPost, reset, setValue]);\r\n\r\n    useEffect(() => {\r\n        // Format the date when posts or postId change\r\n        if (currentPost) {\r\n            const currentDate = new Date();\r\n            const options = { month: 'short', day: 'numeric', year: 'numeric' };\r\n            const formattedDate = new Date(currentDate).toLocaleString('en-US', options);\r\n            setFormattedDate(formattedDate);\r\n        }\r\n    }, [postId, getPostById]);\r\n\r\n\r\n    const handleEditPostSubmit = (data) => {\r\n        // func for taking care when admin clicks \"update post\"\r\n        const { title, description, imageFile, category } = data;\r\n\r\n        // If the admin chose a new photo, use the new imageFile, otherwise, keep the original imageUrl\r\n        const imageUrl = imageFile && imageFile[0]\r\n            ? URL.createObjectURL(imageFile[0])\r\n            : currentPost.imageUrl;\r\n\r\n        // set date by the figma format\r\n        const currentDate = new Date();\r\n        const options = { month: 'short', day: 'numeric', year: 'numeric' };\r\n        const formattedDate = new Date(currentDate).toLocaleString('en-US', options);\r\n        setFormattedDate(formattedDate);\r\n\r\n        // keep the original post values for making the editing easier for admin\r\n        const postData = {\r\n            id: postId,\r\n            category: category,\r\n            title: title,\r\n            description: description,\r\n            imageUrl: imageUrl,\r\n            date: formattedDate,\r\n        };\r\n\r\n        updatePost(postData);\r\n\r\n        setSuccessMessage('Post updated successfully!');\r\n        reset();\r\n    };\r\n\r\n    if (!currentPost) {\r\n        return <p>Post isn't exist.</p>;\r\n    }\r\n\r\n    // Creating a new post for edit\r\n    return (\r\n        <div className=\"admin-form\">\r\n            <h2>Edit The Post</h2>\r\n            <form onSubmit={handleSubmit(handleEditPostSubmit)}>\r\n                <p>Current Date: {formattedDate}</p>\r\n\r\n                {/* Other form fields */}\r\n                <label htmlFor=\"category\">Category</label>\r\n                <select {...register('category')}>\r\n                    {/* Include options based on your application logic */}\r\n                    <option value=\"Daily_Digest\">Daily Digest</option>\r\n                    <option value=\"Design_Tools\">Design Tools</option>\r\n                    <option value=\"Tutorials\">Tutorials</option>\r\n                </select>\r\n\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input {...register('title')} />\r\n\r\n                <label htmlFor=\"description\">Description</label>\r\n                <textarea {...register('description')} />\r\n\r\n                <label htmlFor=\"imageUrl\">Current Image URL:</label>\r\n                <input type=\"text\" value={currentPost?.imageUrl} readOnly />\r\n\r\n                <label htmlFor=\"imageFile\">Choose Image:</label>\r\n                <input\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    {...register('imageFile')}\r\n                />\r\n                <button type=\"submit\">Update Post</button>\r\n            </form>\r\n            {successMessage && <p className=\"success-message\">{successMessage}</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function EditPost({ postId }) {\r\n    const { user } = useContext(AuthContext);\r\n\r\n    // Convert postId to an integer\r\n    const postIdInt = parseInt(postId, 10);\r\n\r\n    if (!user) {\r\n        return <p>You must sign in first!</p>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <EditPostForm postId={postIdInt} />\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
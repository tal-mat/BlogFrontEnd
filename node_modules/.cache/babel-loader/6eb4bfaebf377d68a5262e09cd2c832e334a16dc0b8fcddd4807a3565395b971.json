{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tal\\\\Documents\\\\Programming courses\\\\WebDev\\\\BackEnd\\\\Blog_Final_Project\\\\BlogFrontEnd\\\\src\\\\components\\\\EditUser.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from 'react';\nimport '../styles/EditUser.css';\nimport { useForm } from 'react-hook-form';\nimport { format } from 'date-fns';\nimport { UsersContext } from '../providers/users-provider';\nimport { useNavigate } from 'react-router-dom';\nimport Modal from './Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function EditUserForm({\n  userId\n}) {\n  _s();\n  const {\n    updateUser,\n    getUserById\n  } = useContext(UsersContext);\n  const {\n    register,\n    handleSubmit,\n    formState,\n    reset\n  } = useForm();\n  const [errorMessage, setErrorMessage] = useState('');\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n  const [showModal, setShowModal] = useState(false);\n  const maxYear = new Date().getFullYear();\n  const minYear = maxYear - 120;\n  const maxDate = new Date(maxYear, 11, 31);\n  const minDate = new Date(minYear, 0, 1);\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const fetchedUser = await getUserById(userId);\n        setUser(fetchedUser);\n      } catch (error) {\n        setErrorMessage('Failed to fetch user data.');\n      }\n    };\n    fetchUser();\n  }, [userId, getUserById]);\n  useEffect(() => {\n    if (user) {\n      reset({\n        firstName: user.firstName,\n        lastName: user.lastName,\n        username: user.username,\n        password: user.password,\n        email: user.email,\n        birthDate: user.birthDate ? new Date(user.birthDate).toISOString().split('T')[0] : '',\n        gender: user.gender,\n        address: user.address,\n        phoneNumber: user.phoneNumber,\n        registrationDate: user.registrationDate ? new Date(user.registrationDate).toISOString().split('T')[0] : '',\n        accountStatus: user.accountStatus,\n        role: user.role\n      });\n    }\n  }, [user, reset]);\n  const handleEditUserSubmit = async data => {\n    const userData = {\n      id: userId,\n      ...data\n    };\n    try {\n      await updateUser(userData);\n      reset();\n      setShowModal(true);\n    } catch (error) {\n      setErrorMessage('Failed to update user details.');\n    }\n  };\n  const handleBackToManagement = () => {\n    setShowModal(false);\n    navigate('/admin/UserManagement');\n  };\n  const handleCancel = () => {\n    setShowModal(false);\n  };\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"User doesn't exist.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-user-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit User Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(handleEditUserSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"firstName\",\n        children: \"First Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ...register('firstName', {\n          required: true,\n          pattern: /^[a-zA-Z]+$/\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), formState.errors.firstName && formState.errors.firstName.type === 'pattern' && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger\",\n        children: [\"Please enter a valid first name with only English letters and no spaces.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 123\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"lastName\",\n        children: \"Last Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ...register('lastName', {\n          required: true,\n          pattern: /^[a-zA-Z]+$/\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), formState.errors.lastName && formState.errors.lastName.type === 'pattern' && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger\",\n        children: [\"Please enter a valid last name with only English letters and no spaces.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 122\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ...register('username')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        ...register('email', {\n          required: true,\n          pattern: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), formState.errors.email && formState.errors.email.type === 'pattern' && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger\",\n        children: [\"Please enter a valid email address.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 86\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"birthDate\",\n        children: \"Birth Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        ...register('birthDate', {\n          required: true,\n          min: format(minDate, 'yyyy-MM-dd'),\n          max: format(maxDate, 'yyyy-MM-dd')\n        }),\n        min: format(minDate, 'yyyy-MM-dd'),\n        max: format(maxDate, 'yyyy-MM-dd'),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), formState.errors.birthDate && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger\",\n        children: [formState.errors.birthDate.message, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 87\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"gender\",\n        children: \"Gender\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        ...register('gender'),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"male\",\n          children: \"Male\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"female\",\n          children: \"Female\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"other\",\n          children: \"Other\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"address\",\n        children: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ...register('address')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"phoneNumber\",\n        children: \"Phone Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        ...register('phoneNumber', {\n          required: true,\n          pattern: /^\\d{10}$/\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), formState.errors.phoneNumber && formState.errors.phoneNumber.type === 'pattern' && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger\",\n        children: [\"Please enter a valid 10-digit phone number.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 94\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"registrationDate\",\n        children: \"Registration Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        ...register('registrationDate', {\n          required: true,\n          min: format(minDate, 'yyyy-MM-dd'),\n          max: format(maxDate, 'yyyy-MM-dd')\n        }),\n        min: format(minDate, 'yyyy-MM-dd'),\n        max: format(maxDate, 'yyyy-MM-dd'),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), formState.errors.registrationDate && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger\",\n        children: [formState.errors.registrationDate.message, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 94\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"accountStatus\",\n        children: \"Account Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        ...register('accountStatus'),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"true\",\n          children: \"Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"false\",\n          children: \"Inactive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"role\",\n        children: \"Role\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        ...register('role'),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"user\",\n          children: \"User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"admin\",\n          children: \"Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), showModal && /*#__PURE__*/_jsxDEV(Modal, {\n      message: \"User details updated successfully!\",\n      onConfirm: handleBackToManagement,\n      onCancel: handleCancel,\n      ConfirmMsg: \"Back to User's Management\",\n      CancelMsg: \"Stay on this page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n_s(EditUserForm, \"aTMPDx2pxLwJaWe0AnmUfIrkvMo=\", false, function () {\n  return [useForm, useNavigate];\n});\n_c = EditUserForm;\nexport default function EditUser({\n  userId\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(EditUserForm, {\n      userId: userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 9\n  }, this);\n}\n_c2 = EditUser;\nvar _c, _c2;\n$RefreshReg$(_c, \"EditUserForm\");\n$RefreshReg$(_c2, \"EditUser\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useForm","format","UsersContext","useNavigate","Modal","jsxDEV","_jsxDEV","EditUserForm","userId","_s","updateUser","getUserById","register","handleSubmit","formState","reset","errorMessage","setErrorMessage","user","setUser","navigate","showModal","setShowModal","maxYear","Date","getFullYear","minYear","maxDate","minDate","fetchUser","fetchedUser","error","firstName","lastName","username","password","email","birthDate","toISOString","split","gender","address","phoneNumber","registrationDate","accountStatus","role","handleEditUserSubmit","data","userData","id","handleBackToManagement","handleCancel","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","type","required","pattern","errors","min","max","message","value","onConfirm","onCancel","ConfirmMsg","CancelMsg","_c","EditUser","_c2","$RefreshReg$"],"sources":["C:/Users/Tal/Documents/Programming courses/WebDev/BackEnd/Blog_Final_Project/BlogFrontEnd/src/components/EditUser.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport '../styles/EditUser.css';\r\nimport { useForm } from 'react-hook-form';\r\nimport { format } from 'date-fns';\r\nimport { UsersContext } from '../providers/users-provider';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Modal from './Modal';\r\n\r\nexport function EditUserForm({ userId }) {\r\n    const { updateUser, getUserById } = useContext(UsersContext);\r\n    const { register, handleSubmit, formState, reset } = useForm();\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [user, setUser] = useState(null);\r\n    const navigate = useNavigate();\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const maxYear = new Date().getFullYear();\r\n    const minYear = maxYear - 120;\r\n    const maxDate = new Date(maxYear, 11, 31);\r\n    const minDate = new Date(minYear, 0, 1);\r\n\r\n    useEffect(() => {\r\n        const fetchUser = async () => {\r\n            try {\r\n                const fetchedUser = await getUserById(userId);\r\n                setUser(fetchedUser);\r\n            } catch (error) {\r\n                setErrorMessage('Failed to fetch user data.');\r\n            }\r\n        };\r\n        fetchUser();\r\n    }, [userId, getUserById]);\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            reset({\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                username: user.username,\r\n                password: user.password,\r\n                email: user.email,\r\n                birthDate: user.birthDate ? new Date(user.birthDate).toISOString().split('T')[0] : '',\r\n                gender: user.gender,\r\n                address: user.address,\r\n                phoneNumber: user.phoneNumber,\r\n                registrationDate: user.registrationDate ? new Date(user.registrationDate).toISOString().split('T')[0] : '',\r\n                accountStatus: user.accountStatus,\r\n                role: user.role,\r\n            });\r\n        }\r\n    }, [user, reset]);\r\n\r\n    const handleEditUserSubmit = async (data) => {\r\n        const userData = { id: userId, ...data };\r\n        try {\r\n            await updateUser(userData);\r\n            reset();\r\n            setShowModal(true);\r\n        } catch (error) {\r\n            setErrorMessage('Failed to update user details.');\r\n        }\r\n    };\r\n\r\n    const handleBackToManagement = () => {\r\n        setShowModal(false);\r\n        navigate('/admin/UserManagement');\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setShowModal(false);\r\n    };\r\n\r\n    if (!user) {\r\n        return <p>User doesn't exist.</p>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"edit-user-form\">\r\n            <h2>Edit User Details</h2>\r\n            <form onSubmit={handleSubmit(handleEditUserSubmit)}>\r\n                <label htmlFor=\"firstName\">First Name:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    {...register('firstName', { required: true, pattern: /^[a-zA-Z]+$/ })}\r\n                    required\r\n                />\r\n                {formState.errors.firstName && formState.errors.firstName.type === 'pattern' && (\r\n                    <span className=\"text-danger\">Please enter a valid first name with only English letters and no spaces.<br /></span>\r\n                )}\r\n\r\n                <label htmlFor=\"lastName\">Last Name:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    {...register('lastName', { required: true, pattern: /^[a-zA-Z]+$/ })}\r\n                    required\r\n                />\r\n                {formState.errors.lastName && formState.errors.lastName.type === 'pattern' && (\r\n                    <span className=\"text-danger\">Please enter a valid last name with only English letters and no spaces.<br /></span>\r\n                )}\r\n\r\n                <label htmlFor=\"username\">Username</label>\r\n                <input {...register('username')} />\r\n\r\n                <label htmlFor=\"email\">Email:</label>\r\n                <input\r\n                    type=\"email\"\r\n                    {...register('email', {\r\n                        required: true,\r\n                        pattern: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\r\n                    })}\r\n                    required\r\n                />\r\n                {formState.errors.email && formState.errors.email.type === 'pattern' && (\r\n                    <span className=\"text-danger\">Please enter a valid email address.<br /></span>\r\n                )}\r\n\r\n                <label htmlFor=\"birthDate\">Birth Date:</label>\r\n                <input\r\n                    type=\"date\"\r\n                    {...register('birthDate', {\r\n                        required: true,\r\n                        min: format(minDate, 'yyyy-MM-dd'),\r\n                        max: format(maxDate, 'yyyy-MM-dd'),\r\n                    })}\r\n                    min={format(minDate, 'yyyy-MM-dd')}\r\n                    max={format(maxDate, 'yyyy-MM-dd')}\r\n                    required\r\n                />\r\n                {formState.errors.birthDate && (\r\n                    <span className=\"text-danger\">{formState.errors.birthDate.message}<br /></span>\r\n                )}\r\n\r\n                <label htmlFor=\"gender\">Gender</label>\r\n                <select {...register('gender')}>\r\n                    <option value=\"male\">Male</option>\r\n                    <option value=\"female\">Female</option>\r\n                    <option value=\"other\">Other</option>\r\n                </select>\r\n\r\n                <label htmlFor=\"address\">Address</label>\r\n                <input {...register('address')} />\r\n\r\n                <label htmlFor=\"phoneNumber\">Phone Number:</label>\r\n                <input\r\n                    type=\"tel\"\r\n                    {...register('phoneNumber', {\r\n                        required: true,\r\n                        pattern: /^\\d{10}$/,\r\n                    })}\r\n                    required\r\n                />\r\n                {formState.errors.phoneNumber && formState.errors.phoneNumber.type === 'pattern' && (\r\n                    <span className=\"text-danger\">Please enter a valid 10-digit phone number.<br /></span>\r\n                )}\r\n\r\n                <label htmlFor=\"registrationDate\">Registration Date</label>\r\n                <input\r\n                    type=\"date\"\r\n                    {...register('registrationDate', {\r\n                        required: true,\r\n                        min: format(minDate, 'yyyy-MM-dd'),\r\n                        max: format(maxDate, 'yyyy-MM-dd'),\r\n                    })}\r\n                    min={format(minDate, 'yyyy-MM-dd')}\r\n                    max={format(maxDate, 'yyyy-MM-dd')}\r\n                    required\r\n                />\r\n                {formState.errors.registrationDate && (\r\n                    <span className=\"text-danger\">{formState.errors.registrationDate.message}<br /></span>\r\n                )}\r\n\r\n                <label htmlFor=\"accountStatus\">Account Status</label>\r\n                <select {...register('accountStatus')}>\r\n                    <option value=\"true\">Active</option>\r\n                    <option value=\"false\">Inactive</option>\r\n                </select>\r\n\r\n                <label htmlFor=\"role\">Role</label>\r\n                <select {...register('role')}>\r\n                    <option value=\"user\">User</option>\r\n                    <option value=\"admin\">Admin</option>\r\n                </select>\r\n\r\n                <button type=\"submit\">Update User</button>\r\n            </form>\r\n            {showModal && (\r\n                <Modal\r\n                    message=\"User details updated successfully!\"\r\n                    onConfirm={handleBackToManagement}\r\n                    onCancel={handleCancel}\r\n                    ConfirmMsg=\"Back to User's Management\"\r\n                    CancelMsg=\"Stay on this page\"\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function EditUser({ userId }) {\r\n    return (\r\n        <div>\r\n            <EditUserForm userId={userId} />\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tal\\\\Documents\\\\Programming courses\\\\WebDev\\\\BackEnd\\\\Blog_Final_Project\\\\BlogFrontEnd\\\\src\\\\components\\\\Posts.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport '../styles/Posts.css';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\n// Global State Management Objects\nimport { PostsContext } from \"../providers/posts-providers\";\nimport { AuthContext } from \"../providers/auth-provider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function PostCard({\n  singlePost\n}) {\n  _s();\n  const {\n    removePost\n  } = useContext(PostsContext);\n  const authContext = useContext(AuthContext);\n  const user = authContext === null || authContext === void 0 ? void 0 : authContext.user;\n  const handleRemovePost = event => {\n    // Prevent the default behavior of th button click so after the click we stay at the same page\n    event.preventDefault();\n    removePost(singlePost);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"section-posts\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-details-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"deleteBtn-date-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"post-date\",\n            children: singlePost.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), user && user.userName && /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"deleteBtn\",\n              onClick: handleRemovePost,\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTrash,\n                size: \"lg\",\n                style: {\n                  color: \"rgb(128, 128, 128)\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `edit/${singlePost.id}`,\n              className: \"editBtn\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faPencilAlt,\n                size: \"sm\",\n                style: {\n                  color: \"rgb(128, 128, 128)\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"post-title\",\n          children: singlePost.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"post-description\",\n          children: singlePost.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-photo-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"post-photo\",\n          src: singlePost.imageUrl,\n          alt: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(PostCard, \"guxtjfrRCCciSHArkuRAmljDWIc=\");\n_c = PostCard;\nexport function PostList({\n  category\n}) {\n  _s2();\n  // A component called PostList that will display a list of PostCard components by category.\n\n  const {\n    filterPostsByCategory,\n    getLastThreePostsByCategory,\n    getAmountOfFilterPostsByCategory\n  } = useContext(PostsContext);\n  const location = useLocation();\n\n  // Scroll to the top of the page when \"View All\" is clicked\n  const handleViewAllClick = () => {\n    window.scrollTo(0, 0);\n  };\n\n  // If the current page is home, then show the last three updated posts by date for the category\n  // as the design of the figma. If not, returns all the posts of the category\n  const posts = location.pathname === '/' || location.pathname === '/posts' ? getLastThreePostsByCategory(category) : filterPostsByCategory(category);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-cards-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"first-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-cards-details-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"post-cards-title\",\n          children: category.replace(/_/g, ' ')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"post-cards-amount\",\n          children: [\"Posts: \", getAmountOfFilterPostsByCategory(category)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), location.pathname !== `/category/${category}` && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ViewAllBtn\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/category/${category}`,\n          className: \"ViewAllLink\",\n          onClick: handleViewAllClick,\n          children: \"View all\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"second-row\",\n      children: posts.map((post, index) => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/posts/${post.id}`,\n        children: /*#__PURE__*/_jsxDEV(PostCard, {\n          singlePost: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n_s2(PostList, \"Lyb4DChWws+j8ViwJMqccY8Sxgs=\", false, function () {\n  return [useLocation];\n});\n_c2 = PostList;\nvar _c, _c2;\n$RefreshReg$(_c, \"PostCard\");\n$RefreshReg$(_c2, \"PostList\");","map":{"version":3,"names":["React","useContext","Link","useLocation","FontAwesomeIcon","faTrash","faPencilAlt","PostsContext","AuthContext","jsxDEV","_jsxDEV","PostCard","singlePost","_s","removePost","authContext","user","handleRemovePost","event","preventDefault","className","children","date","fileName","_jsxFileName","lineNumber","columnNumber","userName","Fragment","onClick","icon","size","style","color","to","id","title","description","src","imageUrl","alt","_c","PostList","category","_s2","filterPostsByCategory","getLastThreePostsByCategory","getAmountOfFilterPostsByCategory","location","handleViewAllClick","window","scrollTo","posts","pathname","replace","map","post","index","_c2","$RefreshReg$"],"sources":["C:/Users/Tal/Documents/Programming courses/WebDev/BackEnd/Blog_Final_Project/BlogFrontEnd/src/components/Posts.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport '../styles/Posts.css';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n// Global State Management Objects\r\nimport { PostsContext } from \"../providers/posts-providers\";\r\nimport { AuthContext } from \"../providers/auth-provider\";\r\n\r\nexport function PostCard({ singlePost }) {\r\n    const { removePost } = useContext(PostsContext);\r\n    const authContext = useContext(AuthContext);\r\n    const user = authContext?.user;\r\n\r\n    const handleRemovePost = (event) => {\r\n        // Prevent the default behavior of th button click so after the click we stay at the same page\r\n        event.preventDefault();\r\n        removePost(singlePost);\r\n    };\r\n\r\n    return (\r\n        <section className=\"section-posts\">\r\n            <div className=\"post-container\">\r\n                <div className=\"post-details-container\">\r\n                    <span className=\"deleteBtn-date-container\">\r\n                        <span className=\"post-date\">{singlePost.date}</span>\r\n                        {user && user.userName && (\r\n                            <React.Fragment>\r\n                                <button className=\"deleteBtn\" onClick={handleRemovePost}>\r\n                                    <FontAwesomeIcon icon={faTrash} size=\"lg\" style={{ color: \"rgb(128, 128, 128)\" }} />\r\n                                </button>\r\n                                <Link to={`edit/${singlePost.id}`} className=\"editBtn\">\r\n                                    <FontAwesomeIcon icon={faPencilAlt} size=\"sm\" style={{ color: \"rgb(128, 128, 128)\" }} />\r\n                                </Link>\r\n                            </React.Fragment>\r\n                        )}\r\n                    </span>\r\n                    <h3 className=\"post-title\">{singlePost.title}</h3>\r\n                    <p className=\"post-description\">{singlePost.description}</p>\r\n                </div>\r\n                <div className=\"post-photo-container\">\r\n                    <img\r\n                        className=\"post-photo\"\r\n                        src={singlePost.imageUrl}\r\n                        alt=\"Post\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport function PostList({ category }) {\r\n    // A component called PostList that will display a list of PostCard components by category.\r\n\r\n\r\n    const { filterPostsByCategory, getLastThreePostsByCategory, getAmountOfFilterPostsByCategory } = useContext(PostsContext);\r\n    const location = useLocation();\r\n\r\n    // Scroll to the top of the page when \"View All\" is clicked\r\n    const handleViewAllClick = () => {\r\n        window.scrollTo(0, 0);\r\n    };\r\n\r\n    // If the current page is home, then show the last three updated posts by date for the category\r\n    // as the design of the figma. If not, returns all the posts of the category\r\n    const posts = (location.pathname === '/') || (location.pathname === '/posts') ? getLastThreePostsByCategory(category) : filterPostsByCategory(category);\r\n\r\n    return (\r\n        <div className=\"post-cards-container\">\r\n            {/* First Row */}\r\n            <div className=\"first-row\">\r\n                <div className=\"post-cards-details-container\">\r\n                    {/*Replace underscores with spaces for the category title*/}\r\n                    <h2 className=\"post-cards-title\">{category.replace(/_/g, ' ')}</h2>\r\n                    <h4 className=\"post-cards-amount\">Posts: {getAmountOfFilterPostsByCategory(category)}</h4>\r\n                </div>\r\n                {/* Check if it's not PostsByCategoryPage before rendering the \"Show All\" button */}\r\n                {location.pathname !== `/category/${category}` && (\r\n                    <button className=\"ViewAllBtn\">\r\n                        <Link to={`/category/${category}`} className=\"ViewAllLink\" onClick={handleViewAllClick}>\r\n                            View all\r\n                        </Link>\r\n                    </button>\r\n                )}\r\n            </div>\r\n\r\n            {/* Second Row */}\r\n            <div className=\"second-row\">\r\n                {/* The map is used to loop over the posts array, and returns a PostCard component with props for each post */}\r\n                {posts.map((post, index) => (\r\n                    <Link key={index} to={`/posts/${post.id}`}>\r\n                        <PostCard singlePost={post} />\r\n                    </Link>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React,{useState,useContext,useEffect}from'react';import{useNavigate}from'react-router-dom';import{useForm}from'react-hook-form';import{format}from'date-fns';import'../styles/AdminControlPanel.css';import{AuthContext}from'../providers/auth-provider';import{DuplicateUsernameError,DuplicateEmailError}from'../errors/CustomErrors';import{useCookies}from'react-cookie';import jwtDecode from'jwt-decode';import hashPassword from'../functions/HashedPassword';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export function SignInForm(){const{signIn}=useContext(AuthContext);const{register,handleSubmit,formState,reset}=useForm();const[errorMessage,setErrorMessage]=useState('');const navigate=useNavigate();const[cookies,setCookie,removeCookie]=useCookies(['cookieName']);// Calculate the min and max allowed years for the birth date\nconst maxYear=new Date().getFullYear();const minYear=maxYear-120;// Calculate the min and max dates based on the min and max years\nconst maxDate=new Date(maxYear,11,31);// December 31st of maxYear\nconst minDate=new Date(minYear,0,1);// January 1st of minYear\nuseEffect(()=>{try{fetch('http://127.0.0.1:4000/oauth/get-token-cookie',{method:'GET',credentials:'include'}).then(response=>{if(response.ok){return response.text();}else{throw new Error('Failed to fetch token');}}).then(cookie=>{console.log(\"Cookie:\",cookie);const token=cookies['token'];console.log(\"Token from cookie: \",token);if(token){try{// Decode the token to extract the user data\nconst{MY_SECRET}=process.env;// Decode the token to extract the user data\nconst decodedToken=jwtDecode(token);const userData=decodedToken.appUserData;console.log(userData);if(userData){// Pre-fill the form fields with the user data\nreset({firstName:userData.firstName,lastName:userData.lastName,email:userData.email,registrationDate:userData.registrationDate,accountStatus:userData.accountStatus,role:userData.role});console.log(\"User data pre-filled:\",userData);}else{console.error('User data not found in the token.');}}catch(error){console.error('Error decoding or decrypting token:',error);}}}).catch(error=>{console.error('Error fetching token:',error);});}catch(error){console.error('Error fetching token:',error);}},[reset]);const handleSignInSubmit=async data=>{console.log('Form submitted with data:',data);const user={username:data.username,// password: hashPassword(data.password),\npassword:data.password,firstName:data.firstName,lastName:data.lastName,email:data.email,birthDate:data.birthDate,gender:data.gender,address:data.address,phoneNumber:data.phoneNumber};try{const signInResult=await signIn(user);if(signInResult.status==='success'){// Clear any previous error messages\nsetErrorMessage('');navigate('/');// Navigate to the index page on success\nreset();// Reset the form\n}else if(signInResult.status==='error'){if(signInResult.message instanceof DuplicateUsernameError){setErrorMessage(signInResult.message.message);}else if(signInResult.message instanceof DuplicateEmailError){setErrorMessage(signInResult.message.message);}}}catch(error){if(error instanceof DuplicateUsernameError){setErrorMessage(error.message);}else if(error instanceof DuplicateEmailError){setErrorMessage(error.message);}else if(error.message){setErrorMessage(error.message);}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"admin-form\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Sign In\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(handleSignInSubmit),children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"username\",children:\"Username:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",...register('username',{required:true}),required:true}),formState.errors.username&&/*#__PURE__*/_jsxs(\"span\",{className:\"text-danger\",children:[\"Please enter your username.\",/*#__PURE__*/_jsx(\"br\",{})]}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",...register('password',{required:true}),required:true}),formState.errors.password&&/*#__PURE__*/_jsxs(\"span\",{className:\"text-danger\",children:[\"Please enter your password.\",/*#__PURE__*/_jsx(\"br\",{})]}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"firstName\",children:\"First Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",...register('firstName',{required:true,pattern:/^[a-zA-Z]+$/}),required:true}),formState.errors.firstName&&formState.errors.firstName.type==='pattern'&&/*#__PURE__*/_jsxs(\"span\",{className:\"text-danger\",children:[\"Please enter a valid first name with only English letters and no spaces.\",/*#__PURE__*/_jsx(\"br\",{})]}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"lastName\",children:\"Last Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",...register('lastName',{required:true,pattern:/^[a-zA-Z]+$/}),required:true}),formState.errors.lastName&&formState.errors.lastName.type==='pattern'&&/*#__PURE__*/_jsxs(\"span\",{className:\"text-danger\",children:[\"Please enter a valid last name with only English letters and no spaces.\",/*#__PURE__*/_jsx(\"br\",{})]}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",...register('email',{required:true,pattern:/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/}),required:true}),formState.errors.email&&formState.errors.email.type==='pattern'&&/*#__PURE__*/_jsxs(\"span\",{className:\"text-danger\",children:[\"Please enter a valid email address.\",/*#__PURE__*/_jsx(\"br\",{})]}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"birthDate\",children:\"Birth Date:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",...register('birthDate',{required:true,min:format(minDate,'yyyy-MM-dd'),max:format(maxDate,'yyyy-MM-dd')}),min:format(minDate,'yyyy-MM-dd'),max:format(maxDate,'yyyy-MM-dd'),required:true}),formState.errors.birthDate&&/*#__PURE__*/_jsxs(\"span\",{className:\"text-danger\",children:[formState.errors.birthDate.message,/*#__PURE__*/_jsx(\"br\",{})]}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"gender\",children:\"Gender:\"}),/*#__PURE__*/_jsxs(\"select\",{...register('gender',{required:true}),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"male\",children:\"Male\"}),/*#__PURE__*/_jsx(\"option\",{value:\"female\",children:\"Female\"}),/*#__PURE__*/_jsx(\"option\",{value:\"other\",children:\"Other\"})]}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"address\",children:\"Address:\"}),/*#__PURE__*/_jsx(\"textarea\",{...register('address',{required:true}),required:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"phoneNumber\",children:\"Phone Number:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"tel\",...register('phoneNumber',{required:true,pattern:/^\\d{10}$/}),required:true}),formState.errors.phoneNumber&&formState.errors.phoneNumber.type==='pattern'&&/*#__PURE__*/_jsxs(\"span\",{className:\"text-danger\",children:[\"Please enter a valid 10-digit phone number.\",/*#__PURE__*/_jsx(\"br\",{})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Sign In\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:errorMessage})]});}","map":{"version":3,"names":["React","useState","useContext","useEffect","useNavigate","useForm","format","AuthContext","DuplicateUsernameError","DuplicateEmailError","useCookies","jwtDecode","hashPassword","jsx","_jsx","jsxs","_jsxs","SignInForm","signIn","register","handleSubmit","formState","reset","errorMessage","setErrorMessage","navigate","cookies","setCookie","removeCookie","maxYear","Date","getFullYear","minYear","maxDate","minDate","fetch","method","credentials","then","response","ok","text","Error","cookie","console","log","token","MY_SECRET","process","env","decodedToken","userData","appUserData","firstName","lastName","email","registrationDate","accountStatus","role","error","catch","handleSignInSubmit","data","user","username","password","birthDate","gender","address","phoneNumber","signInResult","status","message","className","children","onSubmit","htmlFor","type","required","errors","pattern","min","max","value"],"sources":["C:/Users/Tal/Documents/Programming courses/WebDev/BackEnd/Blog_Final_Project/BlogFrontEnd/src/components/SignIn.js"],"sourcesContent":["import React, {useState, useContext, useEffect} from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { format } from 'date-fns';\r\nimport '../styles/AdminControlPanel.css';\r\nimport { AuthContext } from '../providers/auth-provider';\r\nimport {\r\n    DuplicateUsernameError,\r\n    DuplicateEmailError\r\n} from '../errors/CustomErrors';\r\nimport { useCookies } from 'react-cookie';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nimport hashPassword from '../functions/HashedPassword';\r\n\r\n\r\nexport function SignInForm() {\r\n    const { signIn } = useContext(AuthContext);\r\n    const { register, handleSubmit, formState, reset } = useForm();\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const navigate = useNavigate();\r\n    const [cookies, setCookie, removeCookie] = useCookies(['cookieName']);\r\n\r\n    // Calculate the min and max allowed years for the birth date\r\n    const maxYear = new Date().getFullYear();\r\n    const minYear = maxYear - 120;\r\n\r\n    // Calculate the min and max dates based on the min and max years\r\n    const maxDate = new Date(maxYear, 11, 31); // December 31st of maxYear\r\n    const minDate = new Date(minYear, 0, 1);   // January 1st of minYear\r\n\r\n    useEffect(() => {\r\n        try {\r\n            fetch('http://127.0.0.1:4000/oauth/get-token-cookie', {\r\n                method: 'GET',\r\n                credentials: 'include'\r\n            })\r\n                .then(response => {\r\n                    if (response.ok) {\r\n                        return response.text();\r\n                    } else {\r\n                        throw new Error('Failed to fetch token');\r\n                    }\r\n                })\r\n                .then(cookie => {\r\n                    console.log(\"Cookie:\", cookie);\r\n                    const token = cookies['token']\r\n                    console.log(\"Token from cookie: \", token);\r\n\r\n                    if (token) {\r\n                        try {\r\n                            // Decode the token to extract the user data\r\n                            const { MY_SECRET } = process.env;\r\n\r\n                            // Decode the token to extract the user data\r\n                            const decodedToken = jwtDecode(token);\r\n                            const userData = decodedToken.appUserData;\r\n                            console.log(userData);\r\n\r\n                            if (userData) {\r\n                                // Pre-fill the form fields with the user data\r\n                                reset({\r\n                                    firstName: userData.firstName,\r\n                                    lastName: userData.lastName,\r\n                                    email: userData.email,\r\n                                    registrationDate: userData.registrationDate,\r\n                                    accountStatus: userData.accountStatus,\r\n                                    role: userData.role,\r\n                                });\r\n\r\n                                console.log(\"User data pre-filled:\", userData);\r\n                            } else {\r\n                                console.error('User data not found in the token.');\r\n                            }\r\n                        } catch (error) {\r\n                            console.error('Error decoding or decrypting token:', error);\r\n                        }\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error fetching token:', error);\r\n                });\r\n        } catch (error) {\r\n            console.error('Error fetching token:', error);\r\n        }\r\n    }, [reset]);\r\n\r\n    const handleSignInSubmit = async (data) => {\r\n        console.log('Form submitted with data:', data);\r\n\r\n        const user = {\r\n            username: data.username,\r\n            // password: hashPassword(data.password),\r\n            password: data.password,\r\n            firstName: data.firstName,\r\n            lastName: data.lastName,\r\n            email: data.email,\r\n            birthDate: data.birthDate,\r\n            gender: data.gender,\r\n            address: data.address,\r\n            phoneNumber: data.phoneNumber,\r\n        };\r\n\r\n        try {\r\n            const signInResult = await signIn(user);\r\n\r\n            if (signInResult.status === 'success') {\r\n                // Clear any previous error messages\r\n                setErrorMessage('');\r\n                navigate('/'); // Navigate to the index page on success\r\n                reset(); // Reset the form\r\n            } else if (signInResult.status === 'error') {\r\n                if (signInResult.message instanceof DuplicateUsernameError) {\r\n                    setErrorMessage(signInResult.message.message)\r\n                } else if (signInResult.message instanceof DuplicateEmailError) {\r\n                    setErrorMessage(signInResult.message.message)\r\n                }\r\n            }\r\n        } catch (error) {\r\n            if (error instanceof DuplicateUsernameError) {\r\n                setErrorMessage(error.message);\r\n            } else if (error instanceof DuplicateEmailError) {\r\n                setErrorMessage(error.message);\r\n            } else if (error.message) {\r\n                setErrorMessage(error.message);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"admin-form\">\r\n            <h2>Sign In</h2>\r\n            <form onSubmit={handleSubmit(handleSignInSubmit)}>\r\n                <label htmlFor=\"username\">Username:</label>\r\n                <input type=\"text\"\r\n                       {...register('username',\r\n                           { required: true })}\r\n                       required />\r\n                {formState.errors.username && (\r\n                    <span className=\"text-danger\">Please enter your username.<br /></span>\r\n                    )}\r\n\r\n                <label htmlFor=\"password\">Password:</label>\r\n                <input type=\"password\"\r\n                       {...register('password',\r\n                           { required: true })}\r\n                       required />\r\n                {formState.errors.password && (\r\n                    <span className=\"text-danger\">Please enter your password.<br /></span>\r\n                )}\r\n\r\n                <label htmlFor=\"firstName\">First Name:</label>\r\n                <input type=\"text\"\r\n                       {...register('firstName',\r\n                           { required: true,\r\n                               pattern: /^[a-zA-Z]+$/\r\n                           })} required />\r\n                {formState.errors.firstName && formState.errors.firstName.type === 'pattern' && (\r\n                    <span className=\"text-danger\">Please enter a valid first name with only English letters and no spaces.<br /></span>\r\n                )}\r\n\r\n                <label htmlFor=\"lastName\">Last Name:</label>\r\n                <input type=\"text\"\r\n                       {...register('lastName',\r\n                           { required: true,\r\n                               pattern: /^[a-zA-Z]+$/\r\n                           })} required />\r\n                {formState.errors.lastName && formState.errors.lastName.type === 'pattern' && (\r\n                    <span className=\"text-danger\">Please enter a valid last name with only English letters and no spaces.<br /></span>\r\n                )}\r\n\r\n                <label htmlFor=\"email\">Email:</label>\r\n                <input type=\"email\"\r\n                       {...register('email', {\r\n                    required: true,\r\n                    pattern: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n                })} required />\r\n                {formState.errors.email && formState.errors.email.type === 'pattern' && (\r\n                    <span className=\"text-danger\">Please enter a valid email address.<br /></span>\r\n                )}\r\n\r\n                <label htmlFor=\"birthDate\">Birth Date:</label>\r\n                <input\r\n                    type=\"date\"\r\n                    {...register('birthDate', {\r\n                        required: true,\r\n                        min: format(minDate, 'yyyy-MM-dd'),\r\n                        max: format(maxDate, 'yyyy-MM-dd'),\r\n                    })}\r\n                    min={format(minDate, 'yyyy-MM-dd')}\r\n                    max={format(maxDate, 'yyyy-MM-dd')}\r\n                    required\r\n                />\r\n                {formState.errors.birthDate && (\r\n                    <span className=\"text-danger\">{formState.errors.birthDate.message}<br /></span>\r\n                )}\r\n\r\n\r\n                <label htmlFor=\"gender\">Gender:</label>\r\n                <select\r\n                    {...register('gender',\r\n                        { required: true\r\n                        })} required>\r\n                    <option value=\"male\">Male</option>\r\n                    <option value=\"female\">Female</option>\r\n                    <option value=\"other\">Other</option>\r\n                </select>\r\n\r\n                <label htmlFor=\"address\">Address:</label>\r\n                <textarea\r\n                    {...register('address',\r\n                        { required: true\r\n                        })} required>\r\n                </textarea>\r\n\r\n                <label htmlFor=\"phoneNumber\">Phone Number:</label>\r\n                <input type=\"tel\"\r\n                       {...register('phoneNumber', {\r\n                           required: true,\r\n                           pattern: /^\\d{10}$/\r\n                       })} required />\r\n                {formState.errors.phoneNumber && formState.errors.phoneNumber.type === 'pattern' && (\r\n                    <span className=\"text-danger\">Please enter a valid 10-digit phone number.<br /></span>\r\n                )}\r\n\r\n                <button type=\"submit\">Sign In</button>\r\n            </form>\r\n            <p className=\"error-message\">{errorMessage}</p>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
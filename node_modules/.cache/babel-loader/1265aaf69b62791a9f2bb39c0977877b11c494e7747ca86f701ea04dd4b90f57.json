{"ast":null,"code":"import React,{useContext,useEffect,useState}from'react';import{AuthContext}from'../providers/auth-provider';import{jsx as _jsx}from\"react/jsx-runtime\";const Admin=_ref=>{let{component:Component,userId}=_ref;const[isAdmin,setIsAdmin]=useState(false);const{signOut}=useContext(AuthContext);useEffect(()=>{const checkAdminStatus=async()=>{try{const response=await fetch('http://127.0.0.1:4000/admin',{method:'GET',credentials:'include'});if(response.ok){setIsAdmin(true);}else{setIsAdmin(false);await signOut();}}catch(error){console.error('Error fetching admin status:',error);setIsAdmin(false);await signOut();}};checkAdminStatus();},[signOut]);if(!isAdmin){return/*#__PURE__*/_jsx(\"p\",{children:\"You must sign in first!\"});}return/*#__PURE__*/_jsx(\"div\",{children:Component?userId!==undefined?/*#__PURE__*/_jsx(Component,{userId:userId}):/*#__PURE__*/_jsx(Component,{}):null});};export default Admin;","map":{"version":3,"names":["React","useContext","useEffect","useState","AuthContext","jsx","_jsx","Admin","_ref","component","Component","userId","isAdmin","setIsAdmin","signOut","checkAdminStatus","response","fetch","method","credentials","ok","error","console","children","undefined"],"sources":["C:/Users/Tal/Documents/Programming courses/WebDev/BackEnd/Blog_Final_Project/BlogFrontEnd/src/functions/Admin.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { AuthContext } from '../providers/auth-provider';\r\n\r\nconst Admin = ({ component: Component, userId }) => {\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const { signOut } = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        const checkAdminStatus = async () => {\r\n            try {\r\n                const response = await fetch('http://127.0.0.1:4000/admin', {\r\n                    method: 'GET',\r\n                    credentials: 'include'\r\n                });\r\n\r\n                if (response.ok) {\r\n                    setIsAdmin(true);\r\n                } else {\r\n                    setIsAdmin(false);\r\n                    await signOut();\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching admin status:', error);\r\n                setIsAdmin(false);\r\n                await signOut();\r\n            }\r\n        };\r\n\r\n        checkAdminStatus();\r\n    }, [signOut]);\r\n\r\n    if (!isAdmin) {\r\n        return <p>You must sign in first!</p>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {Component ? (\r\n                userId !== undefined ? <Component userId={userId} /> : <Component />\r\n            ) : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Admin;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,UAAU,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC9D,OAASC,WAAW,KAAQ,4BAA4B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEzD,KAAM,CAAAC,KAAK,CAAGC,IAAA,EAAsC,IAArC,CAAEC,SAAS,CAAEC,SAAS,CAAEC,MAAO,CAAC,CAAAH,IAAA,CAC3C,KAAM,CAACI,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAAEW,OAAQ,CAAC,CAAGb,UAAU,CAACG,WAAW,CAAC,CAE3CF,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAa,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,6BAA6B,CAAE,CACxDC,MAAM,CAAE,KAAK,CACbC,WAAW,CAAE,SACjB,CAAC,CAAC,CAEF,GAAIH,QAAQ,CAACI,EAAE,CAAE,CACbP,UAAU,CAAC,IAAI,CAAC,CACpB,CAAC,IAAM,CACHA,UAAU,CAAC,KAAK,CAAC,CACjB,KAAM,CAAAC,OAAO,CAAC,CAAC,CACnB,CACJ,CAAE,MAAOO,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACpDR,UAAU,CAAC,KAAK,CAAC,CACjB,KAAM,CAAAC,OAAO,CAAC,CAAC,CACnB,CACJ,CAAC,CAEDC,gBAAgB,CAAC,CAAC,CACtB,CAAC,CAAE,CAACD,OAAO,CAAC,CAAC,CAEb,GAAI,CAACF,OAAO,CAAE,CACV,mBAAON,IAAA,MAAAiB,QAAA,CAAG,yBAAuB,CAAG,CAAC,CACzC,CAEA,mBACIjB,IAAA,QAAAiB,QAAA,CACKb,SAAS,CACNC,MAAM,GAAKa,SAAS,cAAGlB,IAAA,CAACI,SAAS,EAACC,MAAM,CAAEA,MAAO,CAAE,CAAC,cAAGL,IAAA,CAACI,SAAS,GAAE,CAAC,CACpE,IAAI,CACP,CAAC,CAEd,CAAC,CAED,cAAe,CAAAH,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
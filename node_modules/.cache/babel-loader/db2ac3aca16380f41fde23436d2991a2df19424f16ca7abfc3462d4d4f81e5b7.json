{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tal\\\\Documents\\\\Programming courses\\\\WebDev\\\\BackEnd\\\\Blog_Final_Project\\\\BlogFrontEnd\\\\src\\\\providers\\\\users-provider.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UsersContext = /*#__PURE__*/createContext(null);\nexport function UsersProvider({\n  children\n}) {\n  _s();\n  const [users, setUsers] = useState([]);\n  const fetchUsersData = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:4000/users', {\n        method: 'GET',\n        credentials: 'include'\n      });\n\n      // console.log((\"users response: \", response));\n\n      if (!response.ok) {\n        throw new Error('Network fetch users data response was not ok.');\n      }\n      const usersData = await response.json();\n      // console.log(\"usersData: \", usersData);\n      setUsers(usersData);\n      // console.log(\"users: \", users);\n    } catch (error) {\n      throw new Error(`There was a problem with the fetch users data operation: ${error.message}`);\n    }\n  };\n  useEffect(() => {\n    fetchUsersData();\n  }, []);\n  const getUserById = async userID => {\n    try {\n      console.log(`Fetching user with ID: ${userID}`);\n      const response = await fetch(`http://127.0.0.1:4000/users/${userID}`, {\n        method: 'GET',\n        credentials: 'include'\n      });\n      console.log(\"User response:\", response);\n      if (!response.ok) {\n        throw new Error('Network fetch user data response was not ok.');\n      }\n      const user = await response.json();\n      console.log(\"Fetched user:\", user);\n      return user;\n    } catch (error) {\n      console.error(`There was a problem with the fetch user data operation: ${error.message}`);\n      throw new Error(`There was a problem with the fetch user data operation: ${error.message}`);\n    }\n  };\n  const RemoveUser = async user => {\n    try {\n      const response = await fetch(`http://127.0.0.1:4000/users/${user.id}`, {\n        method: 'DELETE',\n        credentials: 'include'\n      });\n      if (response.ok) {\n        alert('User deleted successfully!');\n        await fetchUsersData(); // Refresh user data after deletion\n      } else {\n        alert('Failed to delete user.');\n      }\n    } catch (error) {\n      console.error('Error deleting user:', error);\n      alert('An error occurred while deleting user.');\n    }\n  };\n  const updateUser = async updatedUser => {\n    console.log(\"updateUser function called with:\", updatedUser);\n    try {\n      const response = await fetch(`http://127.0.0.1:4000/users/${updatedUser.id}`, {\n        method: 'PUT',\n        credentials: 'include',\n        body: JSON.stringify(updatedUser),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(\"Fetch response:\", response); // Log the fetch response\n      await fetchUsersData();\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n    } catch (error) {\n      console.error('There was a problem updating the post:', error);\n    }\n  };\n  const value = {\n    users,\n    setUsers,\n    fetchUsersData,\n    getUserById,\n    RemoveUser,\n    updateUser\n  };\n  return /*#__PURE__*/_jsxDEV(UsersContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n}\n_s(UsersProvider, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = UsersProvider;\nexport default UsersProvider;\nvar _c;\n$RefreshReg$(_c, \"UsersProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","jsxDEV","_jsxDEV","UsersContext","UsersProvider","children","_s","users","setUsers","fetchUsersData","response","fetch","method","credentials","ok","Error","usersData","json","error","message","getUserById","userID","console","log","user","RemoveUser","id","alert","updateUser","updatedUser","body","JSON","stringify","headers","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Tal/Documents/Programming courses/WebDev/BackEnd/Blog_Final_Project/BlogFrontEnd/src/providers/users-provider.js"],"sourcesContent":["import React, { createContext, useEffect, useState  } from \"react\";\r\n\r\n\r\nexport const UsersContext = createContext(null);\r\n\r\nexport function UsersProvider({ children }) {\r\n    const [users, setUsers] = useState([]);\r\n\r\n    const fetchUsersData = async () => {\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:4000/users', {\r\n                method: 'GET',\r\n                credentials: 'include'\r\n            });\r\n\r\n            // console.log((\"users response: \", response));\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Network fetch users data response was not ok.');\r\n            }\r\n\r\n            const usersData = await response.json();\r\n            // console.log(\"usersData: \", usersData);\r\n            setUsers(usersData);\r\n            // console.log(\"users: \", users);\r\n        } catch (error) {\r\n            throw new Error(`There was a problem with the fetch users data operation: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchUsersData();\r\n    }, [])\r\n\r\n    const getUserById = async (userID) => {\r\n        try {\r\n            console.log(`Fetching user with ID: ${userID}`);\r\n            const response = await fetch(`http://127.0.0.1:4000/users/${userID}`, {\r\n                method: 'GET',\r\n                credentials: 'include'\r\n            });\r\n\r\n            console.log(\"User response:\", response);\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Network fetch user data response was not ok.');\r\n            }\r\n\r\n            const user = await response.json();\r\n            console.log(\"Fetched user:\", user);\r\n            return user;\r\n        } catch (error) {\r\n            console.error(`There was a problem with the fetch user data operation: ${error.message}`);\r\n            throw new Error(`There was a problem with the fetch user data operation: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    const RemoveUser = async (user) =>\r\n    {\r\n        try {\r\n            const response = await fetch(`http://127.0.0.1:4000/users/${user.id}`, {\r\n                method: 'DELETE',\r\n                credentials: 'include'\r\n            });\r\n\r\n            if (response.ok) {\r\n                alert('User deleted successfully!');\r\n                await fetchUsersData(); // Refresh user data after deletion\r\n            } else {\r\n                alert('Failed to delete user.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting user:', error);\r\n            alert('An error occurred while deleting user.');\r\n        }\r\n    }\r\n\r\n    const updateUser = async  (updatedUser) => {\r\n        console.log(\"updateUser function called with:\", updatedUser);\r\n        try {\r\n            const response = await fetch(`http://127.0.0.1:4000/users/${updatedUser.id}`, {\r\n                method: 'PUT',\r\n                credentials: 'include',\r\n                body: JSON.stringify(updatedUser),\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            });\r\n            console.log(\"Fetch response:\", response); // Log the fetch response\r\n            await fetchUsersData();\r\n\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n        } catch (error) {\r\n            console.error('There was a problem updating the post:', error);\r\n\r\n        }\r\n    };\r\n\r\n\r\n    const value = {\r\n        users,\r\n        setUsers,\r\n        fetchUsersData,\r\n        getUserById,\r\n        RemoveUser,\r\n        updateUser\r\n    };\r\n\r\n    return (\r\n        <UsersContext.Provider value={value}>\r\n            {children}\r\n        </UsersContext.Provider>\r\n    );\r\n}\r\n\r\nexport default UsersProvider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
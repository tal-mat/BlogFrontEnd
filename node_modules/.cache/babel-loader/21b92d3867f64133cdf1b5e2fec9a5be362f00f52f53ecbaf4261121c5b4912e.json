{"ast":null,"code":"import React,{createContext,useEffect,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";export const UsersContext=/*#__PURE__*/createContext(null);export function UsersProvider(_ref){let{children}=_ref;const[users,setUsers]=useState([]);const fetchUsersData=async()=>{try{const response=await fetch('http://127.0.0.1:4000/users',{method:'GET',credentials:'include'});// console.log((\"users response: \", response));\nif(!response.ok){throw new Error('Network fetch users data response was not ok.');}const usersData=await response.json();// console.log(\"usersData: \", usersData);\nsetUsers(usersData);// console.log(\"users: \", users);\n}catch(error){throw new Error(\"There was a problem with the fetch users data operation: \".concat(error.message));}};useEffect(()=>{fetchUsersData();},[]);const getUserById=async userID=>{try{console.log(\"Fetching user with ID: \".concat(userID));const response=await fetch(\"http://127.0.0.1:4000/users/\".concat(userID),{method:'GET',credentials:'include'});console.log(\"User response:\",response);if(!response.ok){throw new Error('Network fetch user data response was not ok.');}const user=await response.json();console.log(\"Fetched user:\",user);return user;}catch(error){console.error(\"There was a problem with the fetch user data operation: \".concat(error.message));throw new Error(\"There was a problem with the fetch user data operation: \".concat(error.message));}};const RemoveUser=async user=>{try{const response=await fetch(\"http://127.0.0.1:4000/users/\".concat(user.id),{method:'DELETE',credentials:'include'});if(response.ok){alert('User deleted successfully!');await fetchUsersData();// Refresh user data after deletion\n}else{alert('Failed to delete user.');}}catch(error){console.error('Error deleting user:',error);alert('An error occurred while deleting user.');}};const updateUser=async updatedUser=>{console.log(\"updateUser function called with:\",updatedUser);try{const response=await fetch(\"http://127.0.0.1:4000/users/\".concat(updatedUser.id),{method:'PUT',credentials:'include',body:JSON.stringify(updatedUser),headers:{'Content-Type':'application/json'}});console.log(\"Fetch response:\",response);// Log the fetch response\nawait fetchUsersData();if(!response.ok){throw new Error('Network response was not ok');}}catch(error){console.error('There was a problem updating the post:',error);}};const value={users,setUsers,fetchUsersData,getUserById,RemoveUser,updateUser};return/*#__PURE__*/_jsx(UsersContext.Provider,{value:value,children:children});}export default UsersProvider;","map":{"version":3,"names":["React","createContext","useEffect","useState","jsx","_jsx","UsersContext","UsersProvider","_ref","children","users","setUsers","fetchUsersData","response","fetch","method","credentials","ok","Error","usersData","json","error","concat","message","getUserById","userID","console","log","user","RemoveUser","id","alert","updateUser","updatedUser","body","JSON","stringify","headers","value","Provider"],"sources":["C:/Users/Tal/Documents/Programming courses/WebDev/BackEnd/Blog_Final_Project/BlogFrontEnd/src/providers/users-provider.js"],"sourcesContent":["import React, { createContext, useEffect, useState  } from \"react\";\r\n\r\n\r\nexport const UsersContext = createContext(null);\r\n\r\nexport function UsersProvider({ children }) {\r\n    const [users, setUsers] = useState([]);\r\n\r\n    const fetchUsersData = async () => {\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:4000/users', {\r\n                method: 'GET',\r\n                credentials: 'include'\r\n            });\r\n\r\n            // console.log((\"users response: \", response));\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Network fetch users data response was not ok.');\r\n            }\r\n\r\n            const usersData = await response.json();\r\n            // console.log(\"usersData: \", usersData);\r\n            setUsers(usersData);\r\n            // console.log(\"users: \", users);\r\n        } catch (error) {\r\n            throw new Error(`There was a problem with the fetch users data operation: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchUsersData();\r\n    }, [])\r\n\r\n    const getUserById = async (userID) => {\r\n        try {\r\n            console.log(`Fetching user with ID: ${userID}`);\r\n            const response = await fetch(`http://127.0.0.1:4000/users/${userID}`, {\r\n                method: 'GET',\r\n                credentials: 'include'\r\n            });\r\n\r\n            console.log(\"User response:\", response);\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Network fetch user data response was not ok.');\r\n            }\r\n\r\n            const user = await response.json();\r\n            console.log(\"Fetched user:\", user);\r\n            return user;\r\n        } catch (error) {\r\n            console.error(`There was a problem with the fetch user data operation: ${error.message}`);\r\n            throw new Error(`There was a problem with the fetch user data operation: ${error.message}`);\r\n        }\r\n    };\r\n\r\n    const RemoveUser = async (user) =>\r\n    {\r\n        try {\r\n            const response = await fetch(`http://127.0.0.1:4000/users/${user.id}`, {\r\n                method: 'DELETE',\r\n                credentials: 'include'\r\n            });\r\n\r\n            if (response.ok) {\r\n                alert('User deleted successfully!');\r\n                await fetchUsersData(); // Refresh user data after deletion\r\n            } else {\r\n                alert('Failed to delete user.');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting user:', error);\r\n            alert('An error occurred while deleting user.');\r\n        }\r\n    }\r\n\r\n    const updateUser = async  (updatedUser) => {\r\n        console.log(\"updateUser function called with:\", updatedUser);\r\n        try {\r\n            const response = await fetch(`http://127.0.0.1:4000/users/${updatedUser.id}`, {\r\n                method: 'PUT',\r\n                credentials: 'include',\r\n                body: JSON.stringify(updatedUser),\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            });\r\n            console.log(\"Fetch response:\", response); // Log the fetch response\r\n            await fetchUsersData();\r\n\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n        } catch (error) {\r\n            console.error('There was a problem updating the post:', error);\r\n\r\n        }\r\n    };\r\n\r\n\r\n    const value = {\r\n        users,\r\n        setUsers,\r\n        fetchUsersData,\r\n        getUserById,\r\n        RemoveUser,\r\n        updateUser\r\n    };\r\n\r\n    return (\r\n        <UsersContext.Provider value={value}>\r\n            {children}\r\n        </UsersContext.Provider>\r\n    );\r\n}\r\n\r\nexport default UsersProvider;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,SAAS,CAAEC,QAAQ,KAAS,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAGnE,MAAO,MAAM,CAAAC,YAAY,cAAGL,aAAa,CAAC,IAAI,CAAC,CAE/C,MAAO,SAAS,CAAAM,aAAaA,CAAAC,IAAA,CAAe,IAAd,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACtC,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAEtC,KAAM,CAAAS,cAAc,CAAG,KAAAA,CAAA,GAAY,CAC/B,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,6BAA6B,CAAE,CACxDC,MAAM,CAAE,KAAK,CACbC,WAAW,CAAE,SACjB,CAAC,CAAC,CAEF;AAEA,GAAI,CAACH,QAAQ,CAACI,EAAE,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,+CAA+C,CAAC,CACpE,CAEA,KAAM,CAAAC,SAAS,CAAG,KAAM,CAAAN,QAAQ,CAACO,IAAI,CAAC,CAAC,CACvC;AACAT,QAAQ,CAACQ,SAAS,CAAC,CACnB;AACJ,CAAE,MAAOE,KAAK,CAAE,CACZ,KAAM,IAAI,CAAAH,KAAK,6DAAAI,MAAA,CAA6DD,KAAK,CAACE,OAAO,CAAE,CAAC,CAChG,CACJ,CAAC,CAEDrB,SAAS,CAAC,IAAM,CACZU,cAAc,CAAC,CAAC,CACpB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAY,WAAW,CAAG,KAAO,CAAAC,MAAM,EAAK,CAClC,GAAI,CACAC,OAAO,CAACC,GAAG,2BAAAL,MAAA,CAA2BG,MAAM,CAAE,CAAC,CAC/C,KAAM,CAAAZ,QAAQ,CAAG,KAAM,CAAAC,KAAK,gCAAAQ,MAAA,CAAgCG,MAAM,EAAI,CAClEV,MAAM,CAAE,KAAK,CACbC,WAAW,CAAE,SACjB,CAAC,CAAC,CAEFU,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAEd,QAAQ,CAAC,CAEvC,GAAI,CAACA,QAAQ,CAACI,EAAE,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,8CAA8C,CAAC,CACnE,CAEA,KAAM,CAAAU,IAAI,CAAG,KAAM,CAAAf,QAAQ,CAACO,IAAI,CAAC,CAAC,CAClCM,OAAO,CAACC,GAAG,CAAC,eAAe,CAAEC,IAAI,CAAC,CAClC,MAAO,CAAAA,IAAI,CACf,CAAE,MAAOP,KAAK,CAAE,CACZK,OAAO,CAACL,KAAK,4DAAAC,MAAA,CAA4DD,KAAK,CAACE,OAAO,CAAE,CAAC,CACzF,KAAM,IAAI,CAAAL,KAAK,4DAAAI,MAAA,CAA4DD,KAAK,CAACE,OAAO,CAAE,CAAC,CAC/F,CACJ,CAAC,CAED,KAAM,CAAAM,UAAU,CAAG,KAAO,CAAAD,IAAI,EAC9B,CACI,GAAI,CACA,KAAM,CAAAf,QAAQ,CAAG,KAAM,CAAAC,KAAK,gCAAAQ,MAAA,CAAgCM,IAAI,CAACE,EAAE,EAAI,CACnEf,MAAM,CAAE,QAAQ,CAChBC,WAAW,CAAE,SACjB,CAAC,CAAC,CAEF,GAAIH,QAAQ,CAACI,EAAE,CAAE,CACbc,KAAK,CAAC,4BAA4B,CAAC,CACnC,KAAM,CAAAnB,cAAc,CAAC,CAAC,CAAE;AAC5B,CAAC,IAAM,CACHmB,KAAK,CAAC,wBAAwB,CAAC,CACnC,CACJ,CAAE,MAAOV,KAAK,CAAE,CACZK,OAAO,CAACL,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5CU,KAAK,CAAC,wCAAwC,CAAC,CACnD,CACJ,CAAC,CAED,KAAM,CAAAC,UAAU,CAAG,KAAQ,CAAAC,WAAW,EAAK,CACvCP,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAEM,WAAW,CAAC,CAC5D,GAAI,CACA,KAAM,CAAApB,QAAQ,CAAG,KAAM,CAAAC,KAAK,gCAAAQ,MAAA,CAAgCW,WAAW,CAACH,EAAE,EAAI,CAC1Ef,MAAM,CAAE,KAAK,CACbC,WAAW,CAAE,SAAS,CACtBkB,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACH,WAAW,CAAC,CACjCI,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CACJ,CAAC,CAAC,CACFX,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAEd,QAAQ,CAAC,CAAE;AAC1C,KAAM,CAAAD,cAAc,CAAC,CAAC,CAGtB,GAAI,CAACC,QAAQ,CAACI,EAAE,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,6BAA6B,CAAC,CAClD,CACJ,CAAE,MAAOG,KAAK,CAAE,CACZK,OAAO,CAACL,KAAK,CAAC,wCAAwC,CAAEA,KAAK,CAAC,CAElE,CACJ,CAAC,CAGD,KAAM,CAAAiB,KAAK,CAAG,CACV5B,KAAK,CACLC,QAAQ,CACRC,cAAc,CACdY,WAAW,CACXK,UAAU,CACVG,UACJ,CAAC,CAED,mBACI3B,IAAA,CAACC,YAAY,CAACiC,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAA7B,QAAA,CAC/BA,QAAQ,CACU,CAAC,CAEhC,CAEA,cAAe,CAAAF,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
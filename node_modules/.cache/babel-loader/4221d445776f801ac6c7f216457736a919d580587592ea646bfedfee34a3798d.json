{"ast":null,"code":"import React,{useContext}from'react';import{AuthContext}from'../providers/auth-provider';import{useParams}from'react-router-dom';import EditPost from'../components/EditPost';import Admin from\"../functions/Admin\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function EditPostPage(){const{user}=useContext(AuthContext);const{id}=useParams();if(!user){return/*#__PURE__*/_jsx(\"p\",{children:\"You must sign in first!\"});}return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(EditPost,{postId:id})});}","map":{"version":3,"names":["React","useContext","AuthContext","useParams","EditPost","Admin","jsx","_jsx","EditPostPage","user","id","children","postId"],"sources":["C:/Users/Tal/Documents/Programming courses/WebDev/BackEnd/Blog_Final_Project/BlogFrontEnd/src/pages/EditPostPage.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { AuthContext } from '../providers/auth-provider';\r\nimport { useParams } from 'react-router-dom';\r\nimport EditPost from '../components/EditPost';\r\nimport Admin from \"../functions/Admin\";\r\n\r\n\r\nexport default function EditPostPage() {\r\n    const { user } = useContext(AuthContext);\r\n    const { id } = useParams();\r\n\r\n    if (!user) {\r\n        return <p>You must sign in first!</p>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* Pass the postId to EditPostForm */}\r\n            <EditPost postId={id} />\r\n            {/* Render other components or admin-related content */}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,UAAU,KAAQ,OAAO,CACzC,OAASC,WAAW,KAAQ,4BAA4B,CACxD,OAASC,SAAS,KAAQ,kBAAkB,CAC5C,MAAO,CAAAC,QAAQ,KAAM,wBAAwB,CAC7C,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAGvC,cAAe,SAAS,CAAAC,YAAYA,CAAA,CAAG,CACnC,KAAM,CAAEC,IAAK,CAAC,CAAGR,UAAU,CAACC,WAAW,CAAC,CACxC,KAAM,CAAEQ,EAAG,CAAC,CAAGP,SAAS,CAAC,CAAC,CAE1B,GAAI,CAACM,IAAI,CAAE,CACP,mBAAOF,IAAA,MAAAI,QAAA,CAAG,yBAAuB,CAAG,CAAC,CACzC,CAEA,mBACIJ,IAAA,QAAAI,QAAA,cAEIJ,IAAA,CAACH,QAAQ,EAACQ,MAAM,CAAEF,EAAG,CAAE,CAAC,CAEvB,CAAC,CAEd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
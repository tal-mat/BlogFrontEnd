{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tal\\\\Documents\\\\Programming courses\\\\WebDev\\\\BackEnd\\\\Blog_Final_Project\\\\BlogFrontEnd\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport { AuthContext } from \"../providers/auth-provider\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\nimport '../styles/Login.css';\nimport { UserNotFoundError, IncorrectPasswordError, DuplicateEmailError } from '../errors/CustomErrors';\nimport googleBtnSigning from \"../images/google_btns/google_sign_in.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const authContext = useContext(AuthContext);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const navigate = useNavigate();\n\n  // useEffect(() => {\n  //     console.log('Immediate Error Message:', errorMessage);\n  // }, [errorMessage]);\n\n  useEffect(() => {\n    // console.log('Immediate Error Message:', errorMessage);\n\n    const checkForRedirect = async () => {\n      try {\n        const searchParams = new URLSearchParams(window.location.search);\n        // Check if redirected to login page with status 302\n        if (searchParams.has('error') && searchParams.get('error') === 'duplicate_email') {\n          const duplicateEmailError = new DuplicateEmailError();\n          console.log(duplicateEmailError.message);\n          setErrorMessage(duplicateEmailError.message);\n        }\n      } catch (error) {\n        console.error('Google Sign-In failed:', error.message);\n      }\n    };\n    checkForRedirect();\n  }, [errorMessage]); // Dependency on errorMessage ensures it runs when errorMessage changes\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const loginResult = await authContext.LoginIn(username, password);\n      if (loginResult.status === 'success') {\n        setUsername('');\n        setPassword('');\n        setIsLoggedIn(true);\n        setErrorMessage('');\n      } else {\n        // Handle specific error types\n        if (loginResult.message instanceof UserNotFoundError) {\n          setErrorMessage(loginResult.message.message);\n        } else if (loginResult.message instanceof IncorrectPasswordError) {\n          setErrorMessage(loginResult.message.message);\n        }\n      }\n    } catch (error) {\n      if (error instanceof UserNotFoundError) {\n        setErrorMessage(error.message);\n      } else if (error instanceof IncorrectPasswordError) {\n        setErrorMessage(error.message);\n      } else if (error.message) {\n        setErrorMessage(error.message);\n      }\n    }\n  };\n  const handleGoogleSignIn = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:4000/requests', {\n        method: 'post',\n        credentials: 'include'\n      });\n      const data = await response.json();\n      window.location.replace(data.url);\n    } catch (error) {\n      console.error('Google Sign-In failed:', error.message);\n    }\n  };\n  const handleNotRegisteredSignIn = () => {\n    navigate('/SignIn');\n  };\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginIconContainer\",\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faUser,\n        size: \"2xl\",\n        className: \"loginIcon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        autoComplete: \"current-password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"google-sign-in\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleGoogleSignIn,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: googleBtnSigning,\n            alt: \"Google Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sign-in\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleNotRegisteredSignIn,\n          children: \"Not registered? Please sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"xGC1IYg2gr5M9Is233TYBhNFd6M=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useContext","useState","useEffect","Navigate","useNavigate","AuthContext","FontAwesomeIcon","faUser","UserNotFoundError","IncorrectPasswordError","DuplicateEmailError","googleBtnSigning","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","errorMessage","setErrorMessage","authContext","isLoggedIn","setIsLoggedIn","navigate","checkForRedirect","searchParams","URLSearchParams","window","location","search","has","get","duplicateEmailError","console","log","message","error","handleSubmit","event","preventDefault","loginResult","LoginIn","status","handleGoogleSignIn","response","fetch","method","credentials","data","json","replace","url","handleNotRegisteredSignIn","to","fileName","_jsxFileName","lineNumber","columnNumber","className","children","icon","size","onSubmit","htmlFor","type","id","value","onChange","e","target","autoComplete","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Tal/Documents/Programming courses/WebDev/BackEnd/Blog_Final_Project/BlogFrontEnd/src/pages/LoginPage.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport {Navigate, useNavigate} from 'react-router-dom';\r\nimport { AuthContext } from \"../providers/auth-provider\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport '../styles/Login.css';\r\nimport {\r\n    UserNotFoundError,\r\n    IncorrectPasswordError,\r\n    DuplicateEmailError\r\n} from '../errors/CustomErrors';\r\n\r\nimport googleBtnSigning from \"../images/google_btns/google_sign_in.png\";\r\n\r\nexport default function Login() {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const authContext = useContext(AuthContext);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n\r\n    // useEffect(() => {\r\n    //     console.log('Immediate Error Message:', errorMessage);\r\n    // }, [errorMessage]);\r\n\r\n    useEffect(() => {\r\n        // console.log('Immediate Error Message:', errorMessage);\r\n\r\n        const checkForRedirect = async () => {\r\n            try {\r\n                const searchParams = new URLSearchParams(window.location.search);\r\n                // Check if redirected to login page with status 302\r\n                if (searchParams.has('error') && searchParams.get('error') === 'duplicate_email') {\r\n                    const duplicateEmailError = new DuplicateEmailError();\r\n                    console.log(duplicateEmailError.message);\r\n                    setErrorMessage(duplicateEmailError.message);\r\n                }\r\n            } catch (error) {\r\n                console.error('Google Sign-In failed:', error.message);\r\n            }\r\n        };\r\n\r\n        checkForRedirect();\r\n    }, [errorMessage]); // Dependency on errorMessage ensures it runs when errorMessage changes\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            const loginResult = await authContext.LoginIn(username, password);\r\n\r\n            if (loginResult.status === 'success') {\r\n                setUsername('');\r\n                setPassword('');\r\n                setIsLoggedIn(true);\r\n                setErrorMessage('');\r\n            } else {\r\n                // Handle specific error types\r\n                if (loginResult.message instanceof UserNotFoundError) {\r\n                    setErrorMessage(loginResult.message.message);\r\n                } else if (loginResult.message instanceof IncorrectPasswordError) {\r\n                    setErrorMessage(loginResult.message.message);\r\n                }\r\n            }\r\n        } catch (error) {\r\n           if (error instanceof UserNotFoundError) {\r\n               setErrorMessage(error.message);\r\n           } else if (error instanceof IncorrectPasswordError) {\r\n               setErrorMessage(error.message);\r\n           } else if (error.message) {\r\n               setErrorMessage(error.message);\r\n           }\r\n        }\r\n    };\r\n\r\n    const handleGoogleSignIn = async () => {\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:4000/requests', { method: 'post', credentials: 'include' });\r\n            const data = await response.json();\r\n            window.location.replace(data.url);\r\n        } catch (error) {\r\n            console.error('Google Sign-In failed:', error.message);\r\n        }\r\n    };\r\n\r\n    const handleNotRegisteredSignIn = () => {\r\n        navigate('/SignIn');\r\n    };\r\n\r\n    if (isLoggedIn) {\r\n        return <Navigate to=\"/\" replace />;\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-form\">\r\n            <div className=\"loginIconContainer\">\r\n                <FontAwesomeIcon icon={faUser} size=\"2xl\" className=\"loginIcon\" />\r\n            </div>\r\n            <h2>Login</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <label htmlFor=\"username\">Username:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"username\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n                <label htmlFor=\"password\">Password:</label>\r\n                <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n\r\n                <div className=\"google-sign-in\">\r\n                    <button type=\"button\" onClick={handleGoogleSignIn}>\r\n                        <img src={googleBtnSigning} alt=\"Google Sign In\" />\r\n                    </button>\r\n                </div>\r\n\r\n                <div className=\"sign-in\">\r\n                    <button type=\"button\" onClick={handleNotRegisteredSignIn}>\r\n                        Not registered? Please sign in\r\n                    </button>\r\n                </div>\r\n\r\n                {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n\r\n                <button type=\"submit\">Log In</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tal\\\\Documents\\\\Programming courses\\\\WebDev\\\\BackEnd\\\\Blog_Final_Project\\\\BlogFrontEnd\\\\src\\\\components\\\\SignIn.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { format } from 'date-fns';\nimport '../styles/AdminControlPanel.css';\nimport { AuthContext } from '../providers/auth-provider';\nimport { DuplicateUsernameError, DuplicateEmailError } from '../errors/CustomErrors';\nimport { useCookies } from 'react-cookie';\nimport { jwtDecode } from 'jwt-decode';\nimport hashPassword from '../functions/HashedPassword';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SignInForm() {\n  _s();\n  const {\n    signIn\n  } = useContext(AuthContext);\n  const {\n    register,\n    handleSubmit,\n    formState,\n    reset\n  } = useForm();\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate();\n  const [cookies, setCookie, removeCookie] = useCookies(['cookieName']);\n\n  // Calculate the min and max allowed years for the birth date\n  const maxYear = new Date().getFullYear();\n  const minYear = maxYear - 120;\n\n  // Calculate the min and max dates based on the min and max years\n  const maxDate = new Date(maxYear, 11, 31); // December 31st of maxYear\n  const minDate = new Date(minYear, 0, 1); // January 1st of minYear\n\n  useEffect(() => {\n    try {\n      fetch('http://127.0.0.1:4000/oauth/get-token-cookie', {\n        method: 'GET',\n        credentials: 'include'\n      }).then(response => {\n        if (response.ok) {\n          return response.text();\n        } else {\n          throw new Error('Failed to fetch token');\n        }\n      }).then(cookie => {\n        console.log(\"Cookie:\", cookie);\n        const token = cookies['token'];\n        console.log(\"Token from cookie: \", token);\n        if (token) {\n          try {\n            // Decode the token to extract the user data\n            const {\n              MY_SECRET\n            } = process.env;\n\n            // Decode the token to extract the user data\n            const decodedToken = jwtDecode(token);\n            const userData = decodedToken.appUserData;\n            console.log(userData);\n            if (userData) {\n              // Pre-fill the form fields with the user data\n              reset({\n                firstName: userData.firstName,\n                lastName: userData.lastName,\n                email: userData.email,\n                registrationDate: userData.registrationDate,\n                accountStatus: userData.accountStatus,\n                role: userData.role\n              });\n              console.log(\"User data pre-filled:\", userData);\n            } else {\n              console.error('User data not found in the token.');\n            }\n          } catch (error) {\n            console.error('Error decoding or decrypting token:', error);\n          }\n        }\n      }).catch(error => {\n        console.error('Error fetching token:', error);\n      });\n    } catch (error) {\n      console.error('Error fetching token:', error);\n    }\n  }, [reset]);\n  const handleSignInSubmit = async data => {\n    console.log('Form submitted with data:', data);\n    const user = {\n      username: data.username,\n      // password: hashPassword(data.password),\n      password: data.password,\n      firstName: data.firstName,\n      lastName: data.lastName,\n      email: data.email,\n      birthDate: data.birthDate,\n      gender: data.gender,\n      address: data.address,\n      phoneNumber: data.phoneNumber\n    };\n    try {\n      const signInResult = await signIn(user);\n      if (signInResult.status === 'success') {\n        // Clear any previous error messages\n        setErrorMessage('');\n        navigate('/'); // Navigate to the index page on success\n        reset(); // Reset the form\n      } else if (signInResult.status === 'error') {\n        if (signInResult.message instanceof DuplicateUsernameError) {\n          setErrorMessage(signInResult.message.message);\n        } else if (signInResult.message instanceof DuplicateEmailError) {\n          setErrorMessage(signInResult.message.message);\n        }\n      }\n    } catch (error) {\n      if (error instanceof DuplicateUsernameError) {\n        setErrorMessage(error.message);\n      } else if (error instanceof DuplicateEmailError) {\n        setErrorMessage(error.message);\n      } else if (error.message) {\n        setErrorMessage(error.message);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(handleSignInSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ...register('username', {\n          required: true\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), formState.errors.username && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger\",\n        children: [\"Please enter your username.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 78\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        ...register('password', {\n          required: true\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), formState.errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger\",\n        children: [\"Please enter your password.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 78\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"firstName\",\n        children: \"First Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ...register('firstName', {\n          required: true,\n          pattern: /^[a-zA-Z]+$/\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), formState.errors.firstName && formState.errors.firstName.type === 'pattern' && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger\",\n        children: [\"Please enter a valid first name with only English letters and no spaces.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 123\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"lastName\",\n        children: \"Last Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ...register('lastName', {\n          required: true,\n          pattern: /^[a-zA-Z]+$/\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), formState.errors.lastName && formState.errors.lastName.type === 'pattern' && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger\",\n        children: [\"Please enter a valid last name with only English letters and no spaces.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 122\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        ...register('email', {\n          required: true,\n          pattern: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), formState.errors.email && formState.errors.email.type === 'pattern' && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger\",\n        children: [\"Please enter a valid email address.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 86\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"birthDate\",\n        children: \"Birth Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        ...register('birthDate', {\n          required: true,\n          min: format(minDate, 'yyyy-MM-dd'),\n          max: format(maxDate, 'yyyy-MM-dd')\n        }),\n        min: format(minDate, 'yyyy-MM-dd'),\n        max: format(maxDate, 'yyyy-MM-dd'),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), formState.errors.birthDate && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger\",\n        children: [formState.errors.birthDate.message, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 87\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"gender\",\n        children: \"Gender:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        ...register('gender', {\n          required: true\n        }),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"male\",\n          children: \"Male\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"female\",\n          children: \"Female\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"other\",\n          children: \"Other\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"address\",\n        children: \"Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        ...register('address', {\n          required: true\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"phoneNumber\",\n        children: \"Phone Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        ...register('phoneNumber', {\n          required: true,\n          pattern: /^\\d{10}$/\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this), formState.errors.phoneNumber && formState.errors.phoneNumber.type === 'pattern' && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger\",\n        children: [\"Please enter a valid 10-digit phone number.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 94\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n}\n_s(SignInForm, \"AKLlS04IwXJcsGux/y9iL+l1nVM=\", false, function () {\n  return [useForm, useNavigate, useCookies];\n});\n_c = SignInForm;\nvar _c;\n$RefreshReg$(_c, \"SignInForm\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useNavigate","useForm","format","AuthContext","DuplicateUsernameError","DuplicateEmailError","useCookies","jwtDecode","hashPassword","jsxDEV","_jsxDEV","SignInForm","_s","signIn","register","handleSubmit","formState","reset","errorMessage","setErrorMessage","navigate","cookies","setCookie","removeCookie","maxYear","Date","getFullYear","minYear","maxDate","minDate","fetch","method","credentials","then","response","ok","text","Error","cookie","console","log","token","MY_SECRET","process","env","decodedToken","userData","appUserData","firstName","lastName","email","registrationDate","accountStatus","role","error","catch","handleSignInSubmit","data","user","username","password","birthDate","gender","address","phoneNumber","signInResult","status","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","required","errors","pattern","min","max","value","_c","$RefreshReg$"],"sources":["C:/Users/Tal/Documents/Programming courses/WebDev/BackEnd/Blog_Final_Project/BlogFrontEnd/src/components/SignIn.js"],"sourcesContent":["import React, {useState, useContext, useEffect} from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { format } from 'date-fns';\r\nimport '../styles/AdminControlPanel.css';\r\nimport { AuthContext } from '../providers/auth-provider';\r\nimport {\r\n    DuplicateUsernameError,\r\n    DuplicateEmailError\r\n} from '../errors/CustomErrors';\r\nimport { useCookies } from 'react-cookie';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nimport hashPassword from '../functions/HashedPassword';\r\n\r\n\r\nexport function SignInForm() {\r\n    const { signIn } = useContext(AuthContext);\r\n    const { register, handleSubmit, formState, reset } = useForm();\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const navigate = useNavigate();\r\n    const [cookies, setCookie, removeCookie] = useCookies(['cookieName']);\r\n\r\n    // Calculate the min and max allowed years for the birth date\r\n    const maxYear = new Date().getFullYear();\r\n    const minYear = maxYear - 120;\r\n\r\n    // Calculate the min and max dates based on the min and max years\r\n    const maxDate = new Date(maxYear, 11, 31); // December 31st of maxYear\r\n    const minDate = new Date(minYear, 0, 1);   // January 1st of minYear\r\n\r\n    useEffect(() => {\r\n        try {\r\n            fetch('http://127.0.0.1:4000/oauth/get-token-cookie', {\r\n                method: 'GET',\r\n                credentials: 'include'\r\n            })\r\n                .then(response => {\r\n                    if (response.ok) {\r\n                        return response.text();\r\n                    } else {\r\n                        throw new Error('Failed to fetch token');\r\n                    }\r\n                })\r\n                .then(cookie => {\r\n                    console.log(\"Cookie:\", cookie);\r\n                    const token = cookies['token']\r\n                    console.log(\"Token from cookie: \", token);\r\n\r\n                    if (token) {\r\n                        try {\r\n                            // Decode the token to extract the user data\r\n                            const { MY_SECRET } = process.env;\r\n\r\n                            // Decode the token to extract the user data\r\n                            const decodedToken = jwtDecode(token);\r\n                            const userData = decodedToken.appUserData;\r\n                            console.log(userData);\r\n\r\n                            if (userData) {\r\n                                // Pre-fill the form fields with the user data\r\n                                reset({\r\n                                    firstName: userData.firstName,\r\n                                    lastName: userData.lastName,\r\n                                    email: userData.email,\r\n                                    registrationDate: userData.registrationDate,\r\n                                    accountStatus: userData.accountStatus,\r\n                                    role: userData.role,\r\n                                });\r\n\r\n                                console.log(\"User data pre-filled:\", userData);\r\n                            } else {\r\n                                console.error('User data not found in the token.');\r\n                            }\r\n                        } catch (error) {\r\n                            console.error('Error decoding or decrypting token:', error);\r\n                        }\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error fetching token:', error);\r\n                });\r\n        } catch (error) {\r\n            console.error('Error fetching token:', error);\r\n        }\r\n    }, [reset]);\r\n\r\n    const handleSignInSubmit = async (data) => {\r\n        console.log('Form submitted with data:', data);\r\n\r\n        const user = {\r\n            username: data.username,\r\n            // password: hashPassword(data.password),\r\n            password: data.password,\r\n            firstName: data.firstName,\r\n            lastName: data.lastName,\r\n            email: data.email,\r\n            birthDate: data.birthDate,\r\n            gender: data.gender,\r\n            address: data.address,\r\n            phoneNumber: data.phoneNumber,\r\n        };\r\n\r\n        try {\r\n            const signInResult = await signIn(user);\r\n\r\n            if (signInResult.status === 'success') {\r\n                // Clear any previous error messages\r\n                setErrorMessage('');\r\n                navigate('/'); // Navigate to the index page on success\r\n                reset(); // Reset the form\r\n            } else if (signInResult.status === 'error') {\r\n                if (signInResult.message instanceof DuplicateUsernameError) {\r\n                    setErrorMessage(signInResult.message.message)\r\n                } else if (signInResult.message instanceof DuplicateEmailError) {\r\n                    setErrorMessage(signInResult.message.message)\r\n                }\r\n            }\r\n        } catch (error) {\r\n            if (error instanceof DuplicateUsernameError) {\r\n                setErrorMessage(error.message);\r\n            } else if (error instanceof DuplicateEmailError) {\r\n                setErrorMessage(error.message);\r\n            } else if (error.message) {\r\n                setErrorMessage(error.message);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"admin-form\">\r\n            <h2>Sign In</h2>\r\n            <form onSubmit={handleSubmit(handleSignInSubmit)}>\r\n                <label htmlFor=\"username\">Username:</label>\r\n                <input type=\"text\"\r\n                       {...register('username',\r\n                           { required: true })}\r\n                       required />\r\n                {formState.errors.username && (\r\n                    <span className=\"text-danger\">Please enter your username.<br /></span>\r\n                    )}\r\n\r\n                <label htmlFor=\"password\">Password:</label>\r\n                <input type=\"password\"\r\n                       {...register('password',\r\n                           { required: true })}\r\n                       required />\r\n                {formState.errors.password && (\r\n                    <span className=\"text-danger\">Please enter your password.<br /></span>\r\n                )}\r\n\r\n                <label htmlFor=\"firstName\">First Name:</label>\r\n                <input type=\"text\"\r\n                       {...register('firstName',\r\n                           { required: true,\r\n                               pattern: /^[a-zA-Z]+$/\r\n                           })} required />\r\n                {formState.errors.firstName && formState.errors.firstName.type === 'pattern' && (\r\n                    <span className=\"text-danger\">Please enter a valid first name with only English letters and no spaces.<br /></span>\r\n                )}\r\n\r\n                <label htmlFor=\"lastName\">Last Name:</label>\r\n                <input type=\"text\"\r\n                       {...register('lastName',\r\n                           { required: true,\r\n                               pattern: /^[a-zA-Z]+$/\r\n                           })} required />\r\n                {formState.errors.lastName && formState.errors.lastName.type === 'pattern' && (\r\n                    <span className=\"text-danger\">Please enter a valid last name with only English letters and no spaces.<br /></span>\r\n                )}\r\n\r\n                <label htmlFor=\"email\">Email:</label>\r\n                <input type=\"email\"\r\n                       {...register('email', {\r\n                    required: true,\r\n                    pattern: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n                })} required />\r\n                {formState.errors.email && formState.errors.email.type === 'pattern' && (\r\n                    <span className=\"text-danger\">Please enter a valid email address.<br /></span>\r\n                )}\r\n\r\n                <label htmlFor=\"birthDate\">Birth Date:</label>\r\n                <input\r\n                    type=\"date\"\r\n                    {...register('birthDate', {\r\n                        required: true,\r\n                        min: format(minDate, 'yyyy-MM-dd'),\r\n                        max: format(maxDate, 'yyyy-MM-dd'),\r\n                    })}\r\n                    min={format(minDate, 'yyyy-MM-dd')}\r\n                    max={format(maxDate, 'yyyy-MM-dd')}\r\n                    required\r\n                />\r\n                {formState.errors.birthDate && (\r\n                    <span className=\"text-danger\">{formState.errors.birthDate.message}<br /></span>\r\n                )}\r\n\r\n\r\n                <label htmlFor=\"gender\">Gender:</label>\r\n                <select\r\n                    {...register('gender',\r\n                        { required: true\r\n                        })} required>\r\n                    <option value=\"male\">Male</option>\r\n                    <option value=\"female\">Female</option>\r\n                    <option value=\"other\">Other</option>\r\n                </select>\r\n\r\n                <label htmlFor=\"address\">Address:</label>\r\n                <textarea\r\n                    {...register('address',\r\n                        { required: true\r\n                        })} required>\r\n                </textarea>\r\n\r\n                <label htmlFor=\"phoneNumber\">Phone Number:</label>\r\n                <input type=\"tel\"\r\n                       {...register('phoneNumber', {\r\n                           required: true,\r\n                           pattern: /^\\d{10}$/\r\n                       })} required />\r\n                {formState.errors.phoneNumber && formState.errors.phoneNumber.type === 'pattern' && (\r\n                    <span className=\"text-danger\">Please enter a valid 10-digit phone number.<br /></span>\r\n                )}\r\n\r\n                <button type=\"submit\">Sign In</button>\r\n            </form>\r\n            <p className=\"error-message\">{errorMessage}</p>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
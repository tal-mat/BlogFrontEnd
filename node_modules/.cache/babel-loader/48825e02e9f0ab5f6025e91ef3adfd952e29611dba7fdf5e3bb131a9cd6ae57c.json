{"ast":null,"code":"import React,{createContext,useState}from\"react\";import{UserNotFoundError,IncorrectPasswordError,DuplicateUsernameError,DuplicateEmailError}from'../errors/CustomErrors';import hashPassword from'../functions/HashedPassword';// Context creation for User\nimport{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext(null);export function AuthProvider(_ref){let{children}=_ref;const[user,setUser]=useState(null);const LoginIn=async(username,password)=>{// console.log('Request Payload:', JSON.stringify({username, password}));\nconst response=await fetch('http://127.0.0.1:4000/users/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username,password}),credentials:\"include\"});console.log(\"login response: \",response);if(response.ok){const{token,userFirstName}=await response.json();// console.log({token, userFirstName});\n// console.log(\"user first name:\", userFirstName);\n// Initialize user object with firstName and empty fields\nsetUser({userId:'',firstName:userFirstName,lastName:'',userName:'',email:'',birthDate:'',gender:'',address:'',phoneNumber:'',registrationDate:'',accountStatus:'',role:''});// setCookie('token', token, { path: '/' });\nreturn{status:'success',message:'Login successful'};}else{// console.log('Server Response:', response);\nconst errorData=await response.json();let errorType='UnknownError';// Default error type\nif(errorData.errorType){errorType=errorData.errorType;}if(errorType==='UserNotFoundError'){throw new UserNotFoundError(username);}else if(errorType==='IncorrectPasswordError'){throw new IncorrectPasswordError();}else if(errorType==='UnknownError'){throw new Error('An unexpected error occurred on the server. Please try again later.');}}};const signOut=async()=>{try{const response=await fetch('http://127.0.0.1:4000/users/signout',{method:'POST',headers:{'Content-Type':'application/json'},credentials:\"include\"});if(response.ok){setUser(null);// console.log(\"User signed out successfully.\");\n}else{console.error(\"Failed to sign out:\",response.statusText);}}catch(error){console.error(\"Error occurred during sign out:\",error);}finally{setUser(null);}};const signIn=async user=>{let date={current:new Date()};let newUser={\"firstName\":user.firstName,\"lastName\":user.lastName,\"username\":user.username,\"password\":user.password,\"email\":user.email,\"birthDate\":user.birthDate,\"gender\":user.gender,\"address\":user.address,\"phoneNumber\":user.phoneNumber,\"registrationDate\":date.current,\"accountStatus\":true,\"role\":\"user\"};const response=await fetch('http://127.0.0.1:4000/users',{method:\"POST\",body:JSON.stringify(newUser),headers:{'Content-Type':'application/json'}});// console.log(\"Response Server:\", response);\nif(response.ok){// User created successfully\nawait LoginIn(newUser.username,newUser.password);return{status:'success',message:'User created and logged in successfully.'};}else{const errorData=await response.json();let errorType='UnknownError';// Default error type\nif(errorData.errorType){errorType=errorData.errorType;}if(errorType==='DuplicateUsernameError'){throw new DuplicateUsernameError();}else if(errorType==='DuplicateEmailError'){throw new DuplicateEmailError();}else{throw new Error('Unexpected error during user creation. Please try again later.');}}};const value={user,LoginIn,signOut,signIn};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});}","map":{"version":3,"names":["React","createContext","useState","UserNotFoundError","IncorrectPasswordError","DuplicateUsernameError","DuplicateEmailError","hashPassword","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","LoginIn","username","password","response","fetch","method","headers","body","JSON","stringify","credentials","console","log","ok","token","userFirstName","json","userId","firstName","lastName","userName","email","birthDate","gender","address","phoneNumber","registrationDate","accountStatus","role","status","message","errorData","errorType","Error","signOut","error","statusText","signIn","date","current","Date","newUser","value","Provider"],"sources":["C:/Users/Tal/Documents/Programming courses/WebDev/BackEnd/Blog_Final_Project/BlogFrontEnd/src/providers/auth-provider.js"],"sourcesContent":["import React, { createContext, useState } from \"react\";\r\nimport {\r\n    UserNotFoundError,\r\n    IncorrectPasswordError,\r\n    DuplicateUsernameError,\r\n    DuplicateEmailError\r\n} from '../errors/CustomErrors';\r\nimport hashPassword from '../functions/HashedPassword';\r\n\r\n// Context creation for User\r\nexport const AuthContext = createContext(null);\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [user, setUser] = useState(null);\r\n\r\n    const LoginIn = async (username, password) => {\r\n        // console.log('Request Payload:', JSON.stringify({username, password}));\r\n        const response = await fetch('http://127.0.0.1:4000/users/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                username,\r\n                password,\r\n            }),\r\n            credentials: \"include\",\r\n        });\r\n        console.log(\"login response: \", response);\r\n\r\n        if (response.ok) {\r\n\r\n            const {token, userFirstName} = await response.json();\r\n            // console.log({token, userFirstName});\r\n            // console.log(\"user first name:\", userFirstName);\r\n\r\n            // Initialize user object with firstName and empty fields\r\n            setUser({\r\n                userId: '',\r\n                firstName: userFirstName,\r\n                lastName: '',\r\n                userName: '',\r\n                email: '',\r\n                birthDate: '',\r\n                gender: '',\r\n                address: '',\r\n                phoneNumber: '',\r\n                registrationDate: '',\r\n                accountStatus: '',\r\n                role: '',\r\n            });\r\n\r\n            // setCookie('token', token, { path: '/' });\r\n\r\n            return {status: 'success', message: 'Login successful'};\r\n        } else {\r\n            // console.log('Server Response:', response);\r\n\r\n            const errorData = await response.json();\r\n\r\n            let errorType = 'UnknownError'; // Default error type\r\n\r\n            if (errorData.errorType) {\r\n                errorType = errorData.errorType;\r\n            }\r\n\r\n            if (errorType === 'UserNotFoundError') {\r\n                throw new UserNotFoundError(username);\r\n            } else if (errorType === 'IncorrectPasswordError') {\r\n                throw new IncorrectPasswordError();\r\n            } else if (errorType === 'UnknownError') {\r\n                throw new Error('An unexpected error occurred on the server. Please try again later.');\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    const signOut = async () => {\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:4000/users/signout', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                credentials: \"include\",\r\n            });\r\n\r\n            if (response.ok) {\r\n                setUser(null);\r\n                // console.log(\"User signed out successfully.\");\r\n            } else {\r\n                console.error(\"Failed to sign out:\", response.statusText);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error occurred during sign out:\", error);\r\n        } finally {\r\n            setUser(null);\r\n        }\r\n    };\r\n\r\n    const signIn = async (user) => {\r\n        let date = { current: new Date() };\r\n\r\n        let newUser = {\r\n            \"firstName\": user.firstName,\r\n            \"lastName\": user.lastName,\r\n            \"username\": user.username,\r\n            \"password\": user.password,\r\n            \"email\": user.email,\r\n            \"birthDate\": user.birthDate,\r\n            \"gender\": user.gender,\r\n            \"address\": user.address,\r\n            \"phoneNumber\": user.phoneNumber,\r\n            \"registrationDate\": date.current,\r\n            \"accountStatus\": true,\r\n            \"role\": \"user\",\r\n        };\r\n\r\n        const response = await fetch('http://127.0.0.1:4000/users', {\r\n            method: \"POST\",\r\n            body: JSON.stringify(newUser),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n        });\r\n\r\n        // console.log(\"Response Server:\", response);\r\n\r\n        if (response.ok) {\r\n            // User created successfully\r\n            await LoginIn(newUser.username, newUser.password);\r\n            return { status: 'success', message: 'User created and logged in successfully.' };\r\n        } else {\r\n            const errorData = await response.json();\r\n\r\n            let errorType = 'UnknownError'; // Default error type\r\n\r\n            if (errorData.errorType) {\r\n                errorType = errorData.errorType;\r\n            }\r\n\r\n            if (errorType === 'DuplicateUsernameError') {\r\n                throw new DuplicateUsernameError();\r\n            } else if (errorType === 'DuplicateEmailError') {\r\n                throw new DuplicateEmailError();\r\n            } else {\r\n                throw new Error('Unexpected error during user creation. Please try again later.');\r\n            }\r\n        }\r\n    };\r\n\r\n    const value = {\r\n        user,\r\n        LoginIn,\r\n        signOut,\r\n        signIn,\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,KAAQ,OAAO,CACtD,OACIC,iBAAiB,CACjBC,sBAAsB,CACtBC,sBAAsB,CACtBC,mBAAmB,KAChB,wBAAwB,CAC/B,MAAO,CAAAC,YAAY,KAAM,6BAA6B,CAEtD;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,MAAO,MAAM,CAAAC,WAAW,cAAGT,aAAa,CAAC,IAAI,CAAC,CAE9C,MAAO,SAAS,CAAAU,YAAYA,CAAAC,IAAA,CAAe,IAAd,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACrC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CAEtC,KAAM,CAAAc,OAAO,CAAG,KAAAA,CAAOC,QAAQ,CAAEC,QAAQ,GAAK,CAC1C;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,mCAAmC,CAAE,CAC9DC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACjBR,QAAQ,CACRC,QACJ,CAAC,CAAC,CACFQ,WAAW,CAAE,SACjB,CAAC,CAAC,CACFC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAET,QAAQ,CAAC,CAEzC,GAAIA,QAAQ,CAACU,EAAE,CAAE,CAEb,KAAM,CAACC,KAAK,CAAEC,aAAa,CAAC,CAAG,KAAM,CAAAZ,QAAQ,CAACa,IAAI,CAAC,CAAC,CACpD;AACA;AAEA;AACAjB,OAAO,CAAC,CACJkB,MAAM,CAAE,EAAE,CACVC,SAAS,CAAEH,aAAa,CACxBI,QAAQ,CAAE,EAAE,CACZC,QAAQ,CAAE,EAAE,CACZC,KAAK,CAAE,EAAE,CACTC,SAAS,CAAE,EAAE,CACbC,MAAM,CAAE,EAAE,CACVC,OAAO,CAAE,EAAE,CACXC,WAAW,CAAE,EAAE,CACfC,gBAAgB,CAAE,EAAE,CACpBC,aAAa,CAAE,EAAE,CACjBC,IAAI,CAAE,EACV,CAAC,CAAC,CAEF;AAEA,MAAO,CAACC,MAAM,CAAE,SAAS,CAAEC,OAAO,CAAE,kBAAkB,CAAC,CAC3D,CAAC,IAAM,CACH;AAEA,KAAM,CAAAC,SAAS,CAAG,KAAM,CAAA5B,QAAQ,CAACa,IAAI,CAAC,CAAC,CAEvC,GAAI,CAAAgB,SAAS,CAAG,cAAc,CAAE;AAEhC,GAAID,SAAS,CAACC,SAAS,CAAE,CACrBA,SAAS,CAAGD,SAAS,CAACC,SAAS,CACnC,CAEA,GAAIA,SAAS,GAAK,mBAAmB,CAAE,CACnC,KAAM,IAAI,CAAA7C,iBAAiB,CAACc,QAAQ,CAAC,CACzC,CAAC,IAAM,IAAI+B,SAAS,GAAK,wBAAwB,CAAE,CAC/C,KAAM,IAAI,CAAA5C,sBAAsB,CAAC,CAAC,CACtC,CAAC,IAAM,IAAI4C,SAAS,GAAK,cAAc,CAAE,CACrC,KAAM,IAAI,CAAAC,KAAK,CAAC,qEAAqE,CAAC,CAC1F,CACJ,CACJ,CAAC,CAGD,KAAM,CAAAC,OAAO,CAAG,KAAAA,CAAA,GAAY,CACxB,GAAI,CACA,KAAM,CAAA/B,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,qCAAqC,CAAE,CAChEC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDI,WAAW,CAAE,SACjB,CAAC,CAAC,CAEF,GAAIP,QAAQ,CAACU,EAAE,CAAE,CACbd,OAAO,CAAC,IAAI,CAAC,CACb;AACJ,CAAC,IAAM,CACHY,OAAO,CAACwB,KAAK,CAAC,qBAAqB,CAAEhC,QAAQ,CAACiC,UAAU,CAAC,CAC7D,CACJ,CAAE,MAAOD,KAAK,CAAE,CACZxB,OAAO,CAACwB,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAAC,CAC3D,CAAC,OAAS,CACNpC,OAAO,CAAC,IAAI,CAAC,CACjB,CACJ,CAAC,CAED,KAAM,CAAAsC,MAAM,CAAG,KAAO,CAAAvC,IAAI,EAAK,CAC3B,GAAI,CAAAwC,IAAI,CAAG,CAAEC,OAAO,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAE,CAAC,CAElC,GAAI,CAAAC,OAAO,CAAG,CACV,WAAW,CAAE3C,IAAI,CAACoB,SAAS,CAC3B,UAAU,CAAEpB,IAAI,CAACqB,QAAQ,CACzB,UAAU,CAAErB,IAAI,CAACG,QAAQ,CACzB,UAAU,CAAEH,IAAI,CAACI,QAAQ,CACzB,OAAO,CAAEJ,IAAI,CAACuB,KAAK,CACnB,WAAW,CAAEvB,IAAI,CAACwB,SAAS,CAC3B,QAAQ,CAAExB,IAAI,CAACyB,MAAM,CACrB,SAAS,CAAEzB,IAAI,CAAC0B,OAAO,CACvB,aAAa,CAAE1B,IAAI,CAAC2B,WAAW,CAC/B,kBAAkB,CAAEa,IAAI,CAACC,OAAO,CAChC,eAAe,CAAE,IAAI,CACrB,MAAM,CAAE,MACZ,CAAC,CAED,KAAM,CAAApC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,6BAA6B,CAAE,CACxDC,MAAM,CAAE,MAAM,CACdE,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACgC,OAAO,CAAC,CAC7BnC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CACJ,CAAC,CAAC,CAEF;AAEA,GAAIH,QAAQ,CAACU,EAAE,CAAE,CACb;AACA,KAAM,CAAAb,OAAO,CAACyC,OAAO,CAACxC,QAAQ,CAAEwC,OAAO,CAACvC,QAAQ,CAAC,CACjD,MAAO,CAAE2B,MAAM,CAAE,SAAS,CAAEC,OAAO,CAAE,0CAA2C,CAAC,CACrF,CAAC,IAAM,CACH,KAAM,CAAAC,SAAS,CAAG,KAAM,CAAA5B,QAAQ,CAACa,IAAI,CAAC,CAAC,CAEvC,GAAI,CAAAgB,SAAS,CAAG,cAAc,CAAE;AAEhC,GAAID,SAAS,CAACC,SAAS,CAAE,CACrBA,SAAS,CAAGD,SAAS,CAACC,SAAS,CACnC,CAEA,GAAIA,SAAS,GAAK,wBAAwB,CAAE,CACxC,KAAM,IAAI,CAAA3C,sBAAsB,CAAC,CAAC,CACtC,CAAC,IAAM,IAAI2C,SAAS,GAAK,qBAAqB,CAAE,CAC5C,KAAM,IAAI,CAAA1C,mBAAmB,CAAC,CAAC,CACnC,CAAC,IAAM,CACH,KAAM,IAAI,CAAA2C,KAAK,CAAC,gEAAgE,CAAC,CACrF,CACJ,CACJ,CAAC,CAED,KAAM,CAAAS,KAAK,CAAG,CACV5C,IAAI,CACJE,OAAO,CACPkC,OAAO,CACPG,MACJ,CAAC,CAED,mBACI5C,IAAA,CAACC,WAAW,CAACiD,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAA7C,QAAA,CAC9BA,QAAQ,CACS,CAAC,CAE/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}